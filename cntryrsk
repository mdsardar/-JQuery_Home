			var table;
			var pickTypeFormVersionNum;
			var pickListType;
			var parentPickListType;
			var createId;
			var createDate;
			var pickListId;
			var parentPickListId;
			var minAgePickListId;
			var maxAgePickListId;
			var custTypePickListId;
			var parentPickListCode;
			var modifiedRiskScore;
			var modifiedWorkflowStatus;
			var authStatus;
			var comments;
			
			var codeValidationMsg;
			var riskScoreValidation;
			var custTypeValidation;
			var erroOccured;
			var commentsRequired;
			var noDataAvailable;
			var futureDateValidation;
			var atleastOneCheckBox;
			var ageDiffValidation;
			var validMinAge;
			var validMaxAge;
			var missDataRequired;
			var minAgeRequired;
			var maxAgeRequired;
			var riskScoreRequired;
			var numbersOnly;
			var alphabetsOnly;
			
			var modeOfAccountOpen;
			var riskScore;
			var workflowStatus;
			var createdBy;
			var createdDt;
			var modifiedBy;
			var modifiedDt;
			var idType;
			var highRelBal;
			var minAge;
			var maxAge;
			var custType;
			var creditLimit;
			var loanAmount;
			var commentsLbl;
			
			var deletebuttonName;
			var buttonName;
			
			var $accData= [];
			var $docData = [];
			var pageNo = 1;
				$(document)
						.ready(
								function() {
									$accData = [];
									$docData = [];
									getUIValues();
									$("#pageNo").val(pageNo);
									$("table tbody").find('input[name="accountOpenModeCheckBox"]').each(function(){
								    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
								    tds = row.find("td");
								    if(tds.eq(3).text() != "")
								    	$(this).closest('tr').find("input.accountOpenModeCheckBox").attr('disabled','disabled');
									});
									
									$("table tbody").find('input[name="docTypeCheckBox"]').each(function(){
									    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
									    tds = row.find("td");
									    if(tds.eq(3).text() != "")
									    	$(this).closest('tr').find("input.docTypeCheckBox").attr('disabled','disabled');
										});
									
									$("table tbody").find('input[name="ageRetailCheckBox"]').each(function(){
									    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
									    tds = row.find("td");
									    if(tds.eq(6).text() != "")
									    	$(this).closest('tr').find("input.ageRetailCheckBox").attr('disabled','disabled');
										});
									
									$("table tbody").find('input[name="ageCardCheckBox"]').each(function(){
									    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
									    tds = row.find("td");
									    if(tds.eq(6).text() != "")
									    	$(this).closest('tr').find("input.ageCardCheckBox").attr('disabled','disabled');
										});
									
									$("table tbody").find('input[name="ageUPLCheckBox"]').each(function(){
									    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
									    tds = row.find("td");
									    if(tds.eq(6).text() != "")
									    	$(this).closest('tr').find("input.ageUPLCheckBox").attr('disabled','disabled');
										});
									
									$("#accOpenTableData tbody tr").each(function(){
										  var  tds = $(this).find("td");
										  $accData.push(tds.eq(0).text().toUpperCase());
									});
									
									$("#docTypeTableData tbody tr").each(function(){
										  var  tds = $(this).find("td");
										  $docData.push(tds.eq(0).text().toUpperCase());
									});
									
									
								    $(".ageRetailTable").hide();
								    $(".ageCardTable").hide();
								    $(".ageUPLTable").hide();
								    $('#businessLines').on('change', function() {
								    	if ( this.value == 'select'){
								    		 $(".ageRetailTable").hide();
								    		 $(".ageCardTable").hide();
											  $(".ageUPLTable").hide();
								    	}
								    	if ( this.value == 'ageRetail'){
								    		 $(".ageRetailTable").show();
								    		 $(".ageCardTable").hide();
											  $(".ageUPLTable").hide();
								    	}
								    	if ( this.value == 'ageCard'){
								    		 $(".ageCardTable").show();
								    		 $(".ageRetailTable").hide();
											  $(".ageUPLTable").hide();
								    	}
								    	if ( this.value == 'ageUPL'){
								    		 $(".ageUPLTable").show();
								    		 $(".ageCardTable").hide();
								    		 $(".ageRetailTable").hide();
								    	}
								    });
										var $content = $("#accountOpenDetails").show();
										$(".accountOpenMode").on("click", function(e) {
											$(this).toggleClass("expanded");
										});
					
										var $content1 = $("#documentTypeDetails").hide();
										$(".documentType").on("click", function(e) {
											$(this).toggleClass("expanded");
										});
										
										
										$("#accOpenTableData tbody tr").each(function(){
											  var  tds = $(this).find("td");
											   modeOfAccountOpen = tds.eq(14).text();
											   riskScore = tds.eq(15).text();
											   workflowStatus = tds.eq(16).text();
											   createdBy = tds.eq(17).text();
											   createdDt = tds.eq(18).text();
											   modifiedBy = tds.eq(19).text();
											   modifiedDt = tds.eq(20).text();
										});
										
										$("#docTypeTableData tbody tr").each(function(){
											  var  tds = $(this).find("td");
											   idType = tds.eq(14).text();
										});
										
										$("#ageRetailTableData tbody tr").each(function(){
											  var  tds = $(this).find("td");
												  highRelBal = tds.eq(23).text();
												  minAge = tds.eq(24).text();
												  maxAge = tds.eq(25).text();
												  custType = tds.eq(26).text();
										});
										$("#ageCardTableData tbody tr").each(function(){
											  var  tds = $(this).find("td");
												  creditLimit = tds.eq(23).text();
										});
										$("#ageUPLTableData tbody tr").each(function(){
											  var  tds = $(this).find("td");
												  loanAmount = tds.eq(23).text();
										});
								});
				
				 $('.btn-editAccountOpen').click(function() {
					 clearStatusMessages();
					 if(($('.accountOpenModeCheckBox:checked').length) != 1)
						 alert(atleastOneCheckBox);
					 else{
					 $("table tbody").find('input[name="accountOpenModeCheckBox"]').each(function(){
			            	if($(this).is(":checked")){
					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					    displayPopup();
					    $("#accountOpenPopupbtn").prop("disabled", false);
					    $("#accountOpenMode").val(tds.eq(0).text());
					    $("#accountOpenMode").attr("disabled","");
					    $('#riskScore1').val(tds.eq(1).text());
					    $("#accountOpenComment").val("");
					    modifiedRiskScore = tds.eq(2).text();
					    modifiedWorkflowStatus = tds.eq(3).text();
					    createId = tds.eq(11).text();
						 createDate = new Date(tds.eq(13).text());
						   pickListType = tds.eq(8).text();
						   pickListId = tds.eq(9).text();
						   authStatus = "UPDATE_PENDING";
			            	}
					 });
					 $("#accountOpenComments").show();
					 $("#modeOfAccountOpenPopup").show();
					 $("#documentTypePopup").hide();
					 $("#ageRetailPopup").hide();  
					 $("#ageCardPopup").hide();  
					 $("#ageUPLPopup").hide();
					 }
					 
				}); 

				 
				 $('.btn-editDocType').click(function() {
					 clearStatusMessages();
					 if(($('.docTypeCheckBox:checked').length) != 1)
						 alert(atleastOneCheckBox);
					 else{
					 $("table tbody").find('input[name="docTypeCheckBox"]').each(function(){
			            	if($(this).is(":checked")){
					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					    displayPopup();
					    $("#docTypePopupbtn").prop("disabled", false);
					    $("#docType").val(tds.eq(0).text());
					    $("#docType").attr("disabled","");
					    $('#riskScore2').val(tds.eq(1).text());
						 $("#docTypeComment").val("");
						 	modifiedRiskScore = tds.eq(2).text();
						  modifiedWorkflowStatus = tds.eq(3).text();
						   createDate = new Date(tds.eq(13).text());
						   createId = tds.eq(11).text();
						   pickListType = tds.eq(8).text();
						   pickListId = tds.eq(9).text();
						   authStatus = "UPDATE_PENDING";
			            	}
					 });
					 $("#docTypeComments").show();
					 $("#documentTypePopup").show();
					 $("#modeOfAccountOpenPopup").hide();
					 $("#ageRetailPopup").hide();  
					 $("#ageCardPopup").hide();  
					 $("#ageUPLPopup").hide();
					 }
				}); 
				 
				  
				  
				  $('.btn-editAgeRetail').click(function() {
					  clearStatusMessages();
						 if(($('.ageRetailCheckBox:checked').length) != 1)
							 alert(atleastOneCheckBox);
						 else{
						 $("table tbody").find('input[name="ageRetailCheckBox"]').each(function(){
				            	if($(this).is(":checked")){
						    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						    displayPopup();
						    $("#aumPopupbtn").prop("disabled", false);
						   $("#highRelationShipBalance").val(tds.eq(0).text());
						   $("#highRelationShipBalance").attr("disabled","");
						   $(".minAge").val(tds.eq(1).text());
						   $(".minAge").attr("disabled","");
						   $(".maxAge").val(tds.eq(2).text());
						   $(".maxAge").attr("disabled","");
						   $("#custTypeRetail").val(tds.eq(3).text());
						   $("#custTypeRetail").attr("disabled","");
						   $('#riskScore3').val(tds.eq(4).text());
						   $("#ageRetailComment").val("");
						   modifiedRiskScore = tds.eq(5).text();
						   modifiedWorkflowStatus = tds.eq(6).text();
						   pickListType = tds.eq(8).text();
						   createDate = new Date(tds.eq(22).text());
						   createId = tds.eq(20).text();
						   parentPickListType = tds.eq(12).text();
						   parentPickListId = tds.eq(13).text();
						   pickListId = tds.eq(14).text();
						   minAgePickListId = tds.eq(15).text();
						   maxAgePickListId = tds.eq(16).text();
						   custTypePickListId = tds.eq(17).text();
						   parentPickListCode = tds.eq(18).text();
						   authStatus = "UPDATE_PENDING";
						   buttonName = 'editAgeRetail';
				            	}
						 });
						 $("#ageRetailComments").show();
						 $("#ageRetailPopup").show();
						 $("#modeOfAccountOpenPopup").hide();
						 $("#documentTypePopup").hide();
						 $("#ageCardPopup").hide();  
						 $("#ageUPLPopup").hide();
						 }
					}); 
				  
				  
				  $('.btn-editAgeCard').click(function() {
					  clearStatusMessages();
						 if(($('.ageCardCheckBox:checked').length) != 1)
							 alert(atleastOneCheckBox);
						 else{
						 $("table tbody").find('input[name="ageCardCheckBox"]').each(function(){
				            	if($(this).is(":checked")){
						    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						    displayPopup();
						    $("#cardUPLPopupbtn").prop("disabled", false);
						   $("#creditLimit").val(tds.eq(0).text());
						   $("#creditLimit").attr("disabled","");
						   $(".minAge").val(tds.eq(1).text());
						   $(".minAge").attr("disabled","");
						   $(".maxAge").val(tds.eq(2).text());
						   $(".maxAge").attr("disabled","");
						   $("#custTypeCard").val(tds.eq(3).text());
						   $("#custTypeCard").attr("disabled","");
						   $('#riskScore4').val(tds.eq(4).text());
						   $("#ageCardComment").val("");
						   modifiedRiskScore = tds.eq(5).text();
						   modifiedWorkflowStatus = tds.eq(6).text();
						   pickListType = tds.eq(8).text();
						   createId = tds.eq(20).text();
						   createDate = new Date(tds.eq(22).text());
						   parentPickListType = tds.eq(12).text();
						   parentPickListId = tds.eq(13).text();
						   pickListId = tds.eq(14).text();
						   minAgePickListId = tds.eq(15).text();
						   maxAgePickListId = tds.eq(16).text();
						   custTypePickListId = tds.eq(17).text();
						   parentPickListCode = tds.eq(18).text();
						   authStatus = "UPDATE_PENDING";
						   buttonName = 'editAgeCard';
				            	}
						 });
						 $("#ageCardComments").show();
						 $("#ageCardPopup").show();
						 $("#modeOfAccountOpenPopup").hide();
						 $("#documentTypePopup").hide();
						 $("#ageRetailPopup").hide();  
						 $("#ageUPLPopup").hide();
						 }
					}); 
				 
				  $('.btn-editAgeUPL').click(function() {
					  clearStatusMessages();
						 if(($('.ageUPLCheckBox:checked').length) != 1)
							 alert(atleastOneCheckBox);
						 else{
						 $("table tbody").find('input[name="ageUPLCheckBox"]').each(function(){
				            	if($(this).is(":checked")){
						    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						    displayPopup();
						    $("#cardUPLPopupbtn").prop("disabled", false);
						   $("#loanAmount").val(tds.eq(0).text());
						   $("#loanAmount").attr("disabled","");
						   $(".minAge").val(tds.eq(1).text());
						   $(".minAge").attr("disabled","");
						   $(".maxAge").val(tds.eq(2).text());
						   $(".maxAge").attr("disabled","");
						   $("#custTypeUPL").val(tds.eq(3).text());
						   $("#custTypeUPL").attr("disabled","");
						   $('#riskScore5').val(tds.eq(4).text());
						   $("#ageUPLComment").val("");
						   modifiedRiskScore = tds.eq(5).text();
						   modifiedWorkflowStatus = tds.eq(6).text();
						   pickListType = tds.eq(8).text();
						   createId = tds.eq(20).text();
						   createDate = new Date(tds.eq(22).text());
						   parentPickListType = tds.eq(12).text();
						   parentPickListId = tds.eq(13).text();
						   pickListId = tds.eq(14).text();
						   minAgePickListId = tds.eq(15).text();
						   maxAgePickListId = tds.eq(16).text();
						   custTypePickListId = tds.eq(17).text();
						   parentPickListCode = tds.eq(18).text();
						   authStatus = "UPDATE_PENDING";
						   buttonName = 'editAgeUPL';
				            	}
						 });
						 $("#ageUPLComments").show();
						 $("#ageUPLPopup").show();
						 $("#modeOfAccountOpenPopup").hide();
						 $("#documentTypePopup").hide();
						 $("#ageRetailPopup").hide();  
						 $("#ageCardPopup").hide();  
						 }
					}); 
				  $('.btn-addAccountOpen').click(function() {
					  clearStatusMessages();
					  uncheckChecker();
					    displayPopup();
					    $("#accountOpenPopupbtn").prop("disabled", false);
					    $("#accountOpenMode").val("");
						$("#accountOpenMode").attr("disabled",false);
						$('#riskScore1').val("");
						$("#accountOpenComment").val("");
						   pickListId = "";
						   modifiedRiskScore = "";
							 modifiedWorkflowStatus = "";
							 authStatus = "ADD_PENDING";
							 createDate ="";
							 createId ="";
					 $("#modeOfAccountOpenPopup").show();
					 $("#documentTypePopup").hide();
					 $("#ageRetailPopup").hide();  
					 $("#ageCardPopup").hide();  
					 $("#ageUPLPopup").hide();
					 
				}); 
				 
				 $('.btn-addDocType').click(function() {
					 clearStatusMessages();
					 uncheckChecker();
					    displayPopup();
					    $("#docTypePopupbtn").prop("disabled", false);
					    $("#docType").val("");
						$("#docType").attr("disabled",false);
						$('#riskScore2').val("");
						$("#docTypeComment").val("");
						   pickListId = "";
						   modifiedRiskScore = "";
							 modifiedWorkflowStatus = "";
							 authStatus = "ADD_PENDING";
							 createDate ="";
							 createId ="";
					 $("#modeOfAccountOpenPopup").hide();
					 $("#documentTypePopup").show();
					 $("#ageRetailPopup").hide();  
					 $("#ageCardPopup").hide();  
					 $("#ageUPLPopup").hide();
					 
				}); 
				 
				 $('.btn-addAgeRetail').click(function() {
					 clearStatusMessages();
					 uncheckChecker();
					    displayPopup();
					 $("#aumPopupbtn").prop("disabled", false);
				    $("#highRelationShipBalance").val("");
					$("#highRelationShipBalance").attr("disabled", false);
					$(".minAge").val("");
					$(".minAge").attr("disabled", false);
					$(".maxAge").val("");
					$(".maxAge").attr("disabled", false);
					$('#custTypeRetail').val("");
					$("#custTypeRetail").attr("disabled", false);
					$('#riskScore3').val("");
					$("#ageRetailComment").val("");
					pickListType = 'PBOC_RISK_SCORE_AGE_RETAIL_PARAMS';
					createDate = "";
					 createId ="";
					parentPickListType = 'PBOC_RISK_SCORE_AGE_RETAIL';
					parentPickListId = "";
					pickListId = "";
					minAgePickListId = "";
					maxAgePickListId = "";
					custTypePickListId = "";
					parentPickListCode = "";
					 modifiedRiskScore = "";
					 modifiedWorkflowStatus = "";
					 authStatus = "ADD_PENDING";
					 buttonName = 'addAgeRetail';
					$("#modeOfAccountOpenPopup").hide();
					$("#documentTypePopup").hide();
					$("#ageRetailPopup").show();
					$("#ageCardPopup").hide();
					$("#ageUPLPopup").hide();
					 
				}); 
				 
				 $('.btn-addAgeCard').click(function() {
					 clearStatusMessages();
					 uncheckChecker();
					    displayPopup();
					    $("#cardUPLPopupbtn").prop("disabled", false);
					    $("#creditLimit").val("");
						$("#creditLimit").attr("disabled", false);
						$(".minAge").val("");
						$(".minAge").attr("disabled", false);
						$(".maxAge").val("");
						$(".maxAge").attr("disabled", false);
						$("#custTypeCard").val("");
						$("#custTypeCard").attr("disabled", false);
						$('#riskScore4').val("");
						$("#ageCardComment").val("");
						pickListType = 'PBOC_RISK_SCORE_AGE_CARD_PARAMS';
						createDate = "";
						 createId ="";
						parentPickListType = 'PBOC_RISK_SCORE_AGE_CARD';
						parentPickListId = "";
						pickListId = "";
						minAgePickListId = "";
						maxAgePickListId = "";
						custTypePickListId = "";
						parentPickListCode = "";
						 modifiedRiskScore = "";
						 modifiedWorkflowStatus = "";
						 authStatus = "ADD_PENDING";
						 buttonName = 'addAgeCard';
					 $("#modeOfAccountOpenPopup").hide();
					 $("#documentTypePopup").hide();
					 $("#ageRetailPopup").hide();  
					 $("#ageCardPopup").show();  
					 $("#ageUPLPopup").hide();
					 
				}); 
				 
				 $('.btn-addAgeUPL').click(function() {
					 clearStatusMessages();
					 uncheckChecker();
					    displayPopup();
					    $("#cardUPLPopupbtn").prop("disabled", false);
					    $("#loanAmount").val("");
						$("#loanAmount").attr("disabled", false);
						$(".minAge").val("");
						$(".minAge").attr("disabled", false);
						$(".maxAge").val("");
						$(".maxAge").attr("disabled", false);
						$("#custTypeUPL").val("");
						$("#custTypeUPL").attr("disabled", false);
						$('#riskScore5').val("");
						$("#ageUPLComment").val("");
						pickListType = 'PBOC_RISK_SCORE_AGE_UPL_PARAMS';
						createDate = "";
						 createId ="";
						parentPickListType = 'PBOC_RISK_SCORE_AGE_UPL';
						parentPickListId = "";
						pickListId = "";
						minAgePickListId = "";
						maxAgePickListId = "";
						custTypePickListId = "";
						parentPickListCode = "";
						 modifiedRiskScore = "";
						 modifiedWorkflowStatus = "";
						 authStatus = "ADD_PENDING";
						 buttonName = 'addAgeUPL';
					 $("#modeOfAccountOpenPopup").hide();
					 $("#documentTypePopup").hide();
					 $("#ageRetailPopup").hide();  
					 $("#ageCardPopup").hide();  
					 $("#ageUPLPopup").show();
					 
				}); 
				$("#accountOpenPopupbtn").click(function(){
					var data = {};
					$("#statusDivPopup").html("");
					//data["modeOfAccountOpening"] = $("#accountOpenMode").val();
					data["modeOfAccountOpening"] = $("#accountOpenMode :selected").val();
					data["riskScore"] = $("#riskScore1 :selected").text();
					data["comments"] = $("#accountOpenComment").val();
					data["createId"] = createId;
					data["createDate"] = createDate;
					data["pickListType"] = 'PBOC_RISK_SCORE_MODE_OF_ACCT_CARD';
					data["pickListId"] = pickListId;
					data["modifiedRiskScore"] = modifiedRiskScore;
					data["modifiedWorkflowStatus"] = modifiedWorkflowStatus;
					data["authStatus"] = authStatus;
					if((validateFields(data["modeOfAccountOpening"],data["comments"], data["riskScore"]))==false){
						return false;
					}
					var isDisabled = $("#accountOpenMode").prop('disabled');
					if(isDisabled == false){
					 if (($.inArray(data["modeOfAccountOpening"].toUpperCase(), $accData) > -1 )) {
						 $("#statusDivPopup").html(codeValidationMsg);
							return false;
						}
					}
					var riskScore = '';
			    		 $("table tbody").find('input[name="accountOpenModeCheckBox"]').each(function(){
				            	if($(this).is(":checked")){
				            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
								    tds = row.find("td"); 
							    	riskScore = tds.eq(1).text();
				            	}
			    		
			    	});
			    		 if(riskScore === data["riskScore"]){
			    			 $("#statusDivPopup").html(riskScoreValidation);
					    		return false;
					    	}
					callAjax(data);
				});
				
				$("#docTypePopupbtn").click(function(){
					$("#statusDivPopup").html("");
					var data = {}
					//data["idType"] = $("#docType").val();
					data["idType"] = $("#docType :selected").val();
					data["riskScore"] = $("#riskScore2 :selected").text();
					data["comments"] = $("#docTypeComment").val();
					data["createId"] = createId;
					data["createDate"] = createDate;
					data["pickListType"] = 'PBOC_RISK_SCORE_IND_ID_TYPE';
					data["pickListId"] = pickListId;
					data["modifiedRiskScore"] = modifiedRiskScore;
					data["modifiedWorkflowStatus"] = modifiedWorkflowStatus;
					data["authStatus"] = authStatus;
					//$("#docTypePopupbtn").prop("disabled", true);
					if((validateFields(data["idType"],data["comments"], data["riskScore"]))==false){
						return false;
					}
					var isDisabled = $("#docType").prop('disabled');
					if(isDisabled == false){
					 if ($.inArray(data["idType"].toUpperCase(), $docData) > -1 ) {
						 $("#statusDivPopup").html(codeValidationMsg);
							return false;
						}
					}
					var riskScore = '';
		    		 $("table tbody").find('input[name="docTypeCheckBox"]').each(function(){
			            	if($(this).is(":checked")){
			            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
							    tds = row.find("td"); 
						    	riskScore = tds.eq(1).text();
			            	}
		    		
		    	});
		    		 if(riskScore === data["riskScore"]){
		    			 $("#statusDivPopup").html(riskScoreValidation);
				    		return false;
				    	}

					callAjax(data);
				});

				$("#aumPopupbtn").click(function(){
					var data = {};
					$("#statusDivPopup").html("");
						data["highRelationShipBalance"] = $("#highRelationShipBalance").val();
						data["minAge"] = $("#minAgeRetail").val();
						data["maxAge"] = $("#maxAgeRetail").val();
						data["custType"] = $("#custTypeRetail :selected").text();
						data["riskScore"] = $("#riskScore3 :selected").text();
						data["modifiedRiskScore"] = modifiedRiskScore;
						data["modifiedWorkflowStatus"] = modifiedWorkflowStatus;
						data["createId"] = createId;
						data["createDate"] = createDate;
						data["pickListType"] = 'PBOC_RISK_SCORE_AGE_RETAIL_PARAMS';
						data["parentPickListType"] = 'PBOC_RISK_SCORE_AGE_RETAIL';
						data["pickListId"] = pickListId;
						data["parentPickListId"] = parentPickListId;
						data["minAgePickListId"] = minAgePickListId;
						data["maxAgePickListId"] = maxAgePickListId;
						data["custTypePickListId"] = custTypePickListId;
						data["parentPickListCode"] = parentPickListCode;
						data["comments"] = $("#ageRetailComment").val();
						data["authStatus"] = authStatus;
						
						if(validateCommonFields(data["highRelationShipBalance"], data["minAge"], data["maxAge"], $("#ageRetailComment").val(), data["riskScore"]) == false){
							return false;
						}
						 if (data["custType"] == null|| data["custType"] == "" || data["custType"] == "NONE") {
		                     $("#statusDivPopup").html("Please Enter Customer Type");
		                     return false;
						 }
						 var isDisabled = $("#highRelationShipBalance").prop('disabled');
							if(isDisabled == false){
						 if(validateRetailData(data) == false){
								return false;
							}
							}
							 if(buttonName == 'addAgeRetail'){
							if(validateMinAgeRetailParams(data) == false || validateMaxAgeRetailParams(data) == false){
								return false;
							}
							 }
							
							var riskScore = '';
				    		 $("table tbody").find('input[name="ageRetailCheckBox"]').each(function(){
					            	if($(this).is(":checked")){
					            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
									    tds = row.find("td"); 
								    	riskScore = tds.eq(4).text();
					            	}
				    		
				    	});
				    		 if(riskScore === data["riskScore"]){
				    			 $("#statusDivPopup").html(riskScoreValidation);
						    		return false;
						    	}
						callAjax(data);
				});

				$("#ageCardPopupbtn").click(function(){
					var data = {};
					$("#statusDivPopup").html("");
						data["creditLimit"] = $("#creditLimit").val();
						data["minAge"] = $("#minAgeCard").val();
						data["maxAge"] = $("#maxAgeCard").val();
						data["custType"] = $("#custTypeCard :selected").text();
						data["riskScore"] = $("#riskScore4 :selected").text();
						data["modifiedRiskScore"] = modifiedRiskScore;
						data["modifiedWorkflowStatus"] = modifiedWorkflowStatus;
						data["createId"] = createId;
						data["createDate"] = createDate;
						data["pickListType"] = 'PBOC_RISK_SCORE_AGE_CARD_PARAMS';
						data["parentPickListType"] = 'PBOC_RISK_SCORE_AGE_CARD';
						data["pickListId"] = pickListId;
						data["parentPickListId"] = parentPickListId;
						data["minAgePickListId"] = minAgePickListId;
						data["maxAgePickListId"] = maxAgePickListId;
						data["custTypePickListId"] = custTypePickListId;
						data["parentPickListCode"] = parentPickListCode;
						data["comments"] = $("#ageCardComment").val();
						data["authStatus"] = authStatus;
						if(validateCommonFields(data["creditLimit"], data["minAge"], data["maxAge"], $("#ageCardComment").val(), data["riskScore"]) == false){
							return false;
						}
						 if (data["custType"] == null|| data["custType"] == "" || data["custType"] == "NONE") {
		                     $("#statusDivPopup").html("Please Enter Customer Type");
		                     return false;
						 }
						 var isDisabled = $("#creditLimit").prop('disabled');
							if(isDisabled == false){
						 if(validateCardData(data) == false){
								return false;
							}
							}
							 if(buttonName == 'addAgeCard'){
							 if(validateMinAgeCardParams(data) == false || validateMaxAgeCardParams(data) == false){
									return false;
								}
							 }
							var riskScore = '';
				    		 $("table tbody").find('input[name="ageCardCheckBox"]').each(function(){
					            	if($(this).is(":checked")){
					            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
									    tds = row.find("td"); 
								    	riskScore = tds.eq(4).text();
					            	}
				    		
				    	});
				    		 if(riskScore === data["riskScore"]){
				    			 $("#statusDivPopup").html(riskScoreValidation);
						    		return false;
						    	}

						callAjax(data);
				});

				$("#ageUPLPopupbtn").click(function(){
					var data = {};
					$("#statusDivPopup").html("");
						data["loanAmount"] = $("#loanAmount").val();
						data["minAge"] = $("#minAgeUPL").val();
						data["maxAge"] = $("#maxAgeUPL").val();
						data["custType"] = $("#custTypeUPL :selected").text();
						data["riskScore"] = $("#riskScore5 :selected").text();
						data["modifiedRiskScore"] = modifiedRiskScore;
						data["modifiedWorkflowStatus"] = modifiedWorkflowStatus;
						data["createId"] = createId;
						data["createDate"] = createDate;
						data["pickListType"] = 'PBOC_RISK_SCORE_AGE_UPL_PARAMS';
						data["parentPickListType"] = 'PBOC_RISK_SCORE_AGE_UPL';
						data["pickListId"] = pickListId;
						data["parentPickListId"] = parentPickListId;
						data["minAgePickListId"] = minAgePickListId;
						data["maxAgePickListId"] = maxAgePickListId;
						data["custTypePickListId"] = custTypePickListId;
						data["parentPickListCode"] = parentPickListCode;
						data["comments"] = $("#ageUPLComment").val();
						data["authStatus"] = authStatus;
						if(validateCommonFields(data["loanAmount"], data["minAge"], data["maxAge"], $("#ageUPLComment").val(), data["riskScore"]) == false){
							return false;
						}
						var isDisabled = $("#loanAmount").prop('disabled');
						if(isDisabled == false){
						if(validateUPLData(data) == false){
							return false;
						}
						}
						var riskScore = '';
			    		 $("table tbody").find('input[name="ageUPLCheckBox"]').each(function(){
				            	if($(this).is(":checked")){
				            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
								    tds = row.find("td"); 
							    	riskScore = tds.eq(4).text();
				            	}
			    		
			    	});
			    		 if(riskScore === data["riskScore"]){
			    			 $("#statusDivPopup").html(riskScoreValidation);
					    		return false;
					    	}
			    		 if(buttonName == 'addAgeUPL'){
			    		 if(validateMinAgeUPLParams(data) == false || validateMaxAgeUPLParams(data) == false){
								return false;
			    		 }
			    		 }
								callAjax(data);
				});
				
				function callAjax(data){
					closeEditAddPopup();
					showPopupLoader();
					$.ajax({
					    type: "POST",
					    contentType: "application/json",
					    url: "countryRiskOverride/update",
					    data: JSON.stringify(data),
					    dataType: 'json',
					    timeout: 600000,
					    success: function (response) {
					    	$('#greyout').hide();
					    	
					    	if(data.pickListType === 'PBOC_RISK_SCORE_MODE_OF_ACCT_CARD'){
					    		 $("table tbody").find('input[name="accountOpenModeCheckBox"]').each(function(){
						            	if($(this).is(":checked")){
						            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
										    tds = row.find("td"); 
									    	tds.eq(2).text(response.modifiedRiskScore);
									    	tds.eq(3).text(response.modifiedWorkflowStatus);
									    	tds.eq(6).text(response.lastUpdatedBy);
									    	tds.eq(7).text(convertDate(response.lastUpdatedDate));
						            	}
					    		
					    	});
					    		 if(response.authStatus == 'ADD_PENDING' && response.createdBy != null){
					    			 createDate = convertDate(response.createDate);
						            	lastUpdatedDate = convertDate(response.lastUpdatedDate);
					    			  var rows = "<tr>" +  
					                    "<td width='10%' align='left'><input type='checkbox' name = 'accountOpenModeCheckBox' disabled>" + response.modeOfAccountOpening + "</td>" +  
					                    "<td width='10%' align='center'>" + response.riskScore + "</td>" +  
					                    "<td width='10%' align='center'>" + response.modifiedRiskScore + "</td>" +  
					                    "<td width='10%' align='center'>" + response.authStatus + "</td>" +  
					                    "<td width='10%' align='center'>" + response.createdBy + "</td>" +  
					                    "<td width='10%' align='center'>" + createDate + "</td>" +  
					                    "<td width='10%' align='center'>" + response.lastUpdatedBy + "</td>" +
					                    "<td width='10%' align='center'>" + lastUpdatedDate + "</td>" +
					                    "</tr>";  
					                $('#accOpenTableData').append(rows);   
					    		 }
					    		 $('.accountOpenModeCheckBox:checked').attr("disabled", true);
					    	}
					    	
					    	else if(data.pickListType === 'PBOC_RISK_SCORE_IND_ID_TYPE'){
					    		 $("table tbody").find('input[name="docTypeCheckBox"]').each(function(){
						            	if($(this).is(":checked")){
						            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
										    tds = row.find("td"); 
									    	tds.eq(2).text(response.modifiedRiskScore);
									    	tds.eq(3).text(response.modifiedWorkflowStatus);
									    	tds.eq(6).text(response.lastUpdatedBy);
									    	tds.eq(7).text(convertDate(response.lastUpdatedDate));
						            	}
					    		
					    	});
					    		 
					    		 if(response.authStatus == 'ADD_PENDING' && response.createdBy != null){
					    			 createDate = convertDate(response.createDate);
						            	lastUpdatedDate = convertDate(response.lastUpdatedDate);
					    			  var rows = "<tr>" +  
					                    "<td width='10%' align='left'><input type='checkbox' name = 'docTypeCheckBox' disabled>" + response.idType + "</td>" +  
					                    "<td width='10%' align='center'>" + response.riskScore + "</td>" +  
					                    "<td width='10%' align='center'>" + response.modifiedRiskScore + "</td>" +  
					                    "<td width='10%' align='center'>" + response.authStatus + "</td>" +  
					                    "<td width='10%' align='center'>" + response.createdBy + "</td>" +  
					                    "<td width='10%' align='center'>" + createDate + "</td>" +  
					                    "<td width='10%' align='center'>" + response.lastUpdatedBy + "</td>" +
					                    "<td width='10%' align='center'>" + lastUpdatedDate + "</td>" +
					                    "</tr>";  
					                $('#docTypeTableData').append(rows);   
					    		 }
						         	$('.docTypeCheckBox:checked').attr("disabled", true);
					    	}
					    	
					    	else if(data.pickListType === 'PBOC_RISK_SCORE_AGE_RETAIL_PARAMS'){
					    		 $("table tbody").find('input[name="ageRetailCheckBox"]').each(function(){
						            	if($(this).is(":checked")){
						            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
										    tds = row.find("td"); 
									    	tds.eq(5).text(response.modifiedRiskScore);
									    	tds.eq(6).text(response.modifiedWorkflowStatus);
									    	tds.eq(10).text(response.lastUpdatedBy);
									    	tds.eq(11).text(convertDate(response.lastUpdatedDate));
						            	}
					    	});
					    		 if(response.authStatus == 'ADD_PENDING' && response.createdBy != null){
					    			 createDate = convertDate(response.createDate);
						            	lastUpdatedDate = convertDate(response.lastUpdatedDate);
					    			  var rows = "<tr>" +  
					                    "<td width='11%' align='left'><input type='checkbox' name = 'ageRetailCheckBox' disabled>" + response.highRelationShipBalance + "</td>" +  
					                    "<td width='5%' align='center'>" + response.minAge + "</td>" +  
					                    "<td width='4%' align='center'>" + response.maxAge + "</td>" +  
					                    "<td width='10%' align='center'>" + response.custType + "</td>" +  
					                    "<td width='10%' align='center'>" + response.riskScore + "</td>" +  
					                    "<td width='10%' align='center'>" + '' + "</td>" +  
					                    "<td width='10%' align='center'>" + response.authStatus + "</td>" +  
					                    "<td width='10%' align='center'>" + response.createdBy + "</td>" +  
					                    "<td width='10%' align='center'>" + createDate + "</td>" +  
					                    "<td width='10%' align='center'>" + response.lastUpdatedBy + "</td>" +
					                    "<td width='20%' align='center'>" + lastUpdatedDate + "</td>" +
					                    "</tr>";  
					                $('#ageRetailTableData').append(rows);   
					    		 }
						         	$('.ageRetailCheckBox:checked').attr("disabled", true);
					    	}
					    	
					    	else if(data.pickListType === 'PBOC_RISK_SCORE_AGE_CARD_PARAMS'){
					    		 $("table tbody").find('input[name="ageCardCheckBox"]').each(function(){
						            	if($(this).is(":checked")){
						            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
										    tds = row.find("td"); 
									    	tds.eq(5).text(response.modifiedRiskScore);
									    	tds.eq(6).text(response.modifiedWorkflowStatus);
									    	tds.eq(10).text(response.lastUpdatedBy);
									    	tds.eq(11).text(convertDate(response.lastUpdatedDate));
						            	}
					    	});
					    		 if(response.authStatus == 'ADD_PENDING' && response.createdBy != null){
					    			 createDate = convertDate(response.createDate);
						            	lastUpdatedDate = convertDate(response.lastUpdatedDate);
					    			  var rows = "<tr>" +  
					                    "<td width='11%' align='left'><input type='checkbox' name = 'ageCardCheckBox' disabled>" + response.creditLimit + "</td>" +  
					                    "<td width='5%' align='center'>" + response.minAge + "</td>" +  
					                    "<td width='4%' align='center'>" + response.maxAge + "</td>" +  
					                    "<td width='10%' align='center'>" + response.custType + "</td>" +  
					                    "<td width='10%' align='center'>" + response.riskScore + "</td>" +  
					                    "<td width='10%' align='center'>" + '' + "</td>" +  
					                    "<td width='10%' align='center'>" + response.authStatus + "</td>" +  
					                    "<td width='10%' align='center'>" + response.createdBy + "</td>" +  
					                    "<td width='10%' align='center'>" + createDate + "</td>" +  
					                    "<td width='10%' align='center'>" + response.lastUpdatedBy + "</td>" +
					                    "<td width='20%' align='center'>" + lastUpdatedDate + "</td>" +
					                    "</tr>";  
					                $('#ageCardTableData').append(rows);   
					    		 }
						         	$('.ageCardCheckBox:checked').attr("disabled", true);
					    		
					    	}
					    	
					    	else if(data.pickListType === 'PBOC_RISK_SCORE_AGE_UPL_PARAMS'){
					    		 $("table tbody").find('input[name="ageUPLCheckBox"]').each(function(){
						            	if($(this).is(":checked")){
						            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
										    tds = row.find("td"); 
									    	tds.eq(5).text(response.modifiedRiskScore);
									    	tds.eq(6).text(response.modifiedWorkflowStatus);
									    	tds.eq(10).text(response.lastUpdatedBy);
									    	tds.eq(11).text(convertDate(response.lastUpdatedDate));
						            	}
					    	});
					    		 if(response.authStatus == 'ADD_PENDING' && response.createdBy != null){
					    			 createDate = convertDate(response.createDate);
						            	lastUpdatedDate = convertDate(response.lastUpdatedDate);
					    			  var rows = "<tr>" +  
					                    "<td width='11%' align='left'><input type='checkbox' name = 'ageUPLCheckBox' disabled>" + response.loanAmount + "</td>" +  
					                    "<td width='5%' align='center'>" + response.minAge + "</td>" +  
					                    "<td width='4%' align='center'>" + response.maxAge + "</td>" +  
					                    "<td width='10%' align='center'>" + response.custType + "</td>" +  
					                    "<td width='10%' align='center'>" + response.riskScore + "</td>" +  
					                    "<td width='10%' align='center'>" + '' + "</td>" +  
					                    "<td width='10%' align='center'>" + response.authStatus + "</td>" +  
					                    "<td width='10%' align='center'>" + response.createdBy + "</td>" +  
					                    "<td width='10%' align='center'>" + createDate + "</td>" +  
					                    "<td width='10%' align='center'>" + response.lastUpdatedBy + "</td>" +
					                    "<td width='20%' align='center'>" + lastUpdatedDate + "</td>" +
					                    "</tr>";  
					                $('#ageUPLTableData').append(rows);   
					    		 }
						         	$('.ageUPLCheckBox:checked').attr("disabled", true);
					    	}
					    	
					    	uncheckChecker();
					    		if((response.statusMessage === 'Record updated successfully') || (response.statusMessage === 'Record saved successfully')){
					    	$("#statusDiv").html(response.statusMessage);
					    	}
					    	else{
					    	$("#errorStatus").html(response.statusMessage);
					    	}
					    	 $("#statusDivPopup").html("");
					    	closePopupLoader();
					    	
					    },
					    error: function (e) {
					    	closeEditAddPopup();
					    	closePopupLoader();
					    	$("#errorStatus").html(erroOccured);
					    }
					    
					});
					}
				
				$('.btn-deleteAccountOpen').click(function() {
				 if(($('.accountOpenModeCheckBox:checked').length) < 1)
					 alert(atleastOneCheckBox);
				 else{
					 $('#deleteComments').show();
					 $('#approveChecker').hide();
					 $('#rejectChecker').hide();
					 deletebuttonName = "deleteAccountOpen";
					 displayCommentsPopup();
				 }
			}); 
				 
				 $('.btn-deleteDocType').click(function() {
						var list = [];
					 if(($('.docTypeCheckBox:checked').length) < 1)
						 alert(atleastOneCheckBox);
					 else{
						 $('#deleteComments').show();
						 $('#approveChecker').hide();
						 $('#rejectChecker').hide();
						 deletebuttonName = "deleteDocType";
						 displayCommentsPopup();
					 }
				}); 
				 
				 $('.btn-deleteAgeRetail').click(function() {
						var list = [];
					 if(($('.ageRetailCheckBox:checked').length) < 1)
						 alert(atleastOneCheckBox);
					 else{
						 $('#deleteComments').show();
						 $('#approveChecker').hide();
						 $('#rejectChecker').hide();
						 deletebuttonName = "deleteAgeRetail";
						 displayCommentsPopup();
					 }
				});
				 
				 
				 $('.btn-deleteAgeCard').click(function() {
						var list = [];
					 if(($('.ageCardCheckBox:checked').length) < 1)
						 alert(atleastOneCheckBox);
					 else{
						 $('#deleteComments').show();
						 $('#approveChecker').hide();
						 $('#rejectChecker').hide();
						 deletebuttonName = "deleteAgeCard";
						 displayCommentsPopup();
					 }
				});
				 
				 
				 $('.btn-deleteAgeUPL').click(function() {
						var list = [];
					 if(($('.ageUPLCheckBox:checked').length) < 1)
						 alert(atleastOneCheckBox);
					 else{
						 $('#deleteComments').show();
						 $('#approveChecker').hide();
						 $('#rejectChecker').hide();
						 deletebuttonName = "deleteAgeUPL";
						 displayCommentsPopup();
					 }
				});
				 
				 
				 $('#deleteCommentsSubmitbtn').click(function(){
						var list = [];
						if(deletebuttonName === "deleteAccountOpen"){
						$("table tbody").find('input[name="accountOpenModeCheckBox"]').each(function(){
							 var data = {};
				            	if($(this).is(":checked")){
						    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						    data["modeOfAccountOpening"] = tds.eq(0).text();
						    data["riskScore"] = tds.eq(1).text();
						    tds.eq(2).text("");
							tds.eq(3).text("");
							data["modifiedWorkflowStatus"] = tds.eq(3).text();
							data["createId"] = tds.eq(11).text();
						    data["createDate"] = new Date(tds.eq(13).text());
						    data["pickListType"] = tds.eq(8).text();
						    data["pickListId"] = tds.eq(9).text();
						    data["authStatus"] = "DELETE_PENDING";
						    data["comments"] = loadComments();
						    list.push(data);
				            	}
						 });
						}
						else if(deletebuttonName === "deleteDocType"){
						 $("table tbody").find('input[name="docTypeCheckBox"]').each(function(){
							 var data = {};
				            	if($(this).is(":checked")){
						    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						    data["idType"] = tds.eq(0).text();
						    data["riskScore"] = tds.eq(1).text();
						    tds.eq(2).text("");
							tds.eq(3).text("");
							data["modifiedWorkflowStatus"] = tds.eq(3).text();
							data["createId"] = tds.eq(11).text();
						    data["createDate"] = new Date(tds.eq(13).text());
						    data["pickListType"] = tds.eq(8).text();
						    data["pickListId"] = tds.eq(9).text();
						    data["authStatus"] = "DELETE_PENDING";
						    data["comments"] = loadComments();
						    list.push(data);
				            	}
						 });
						}
						else if(deletebuttonName === "deleteAgeRetail"){
						 $("table tbody").find('input[name="ageRetailCheckBox"]').each(function(){
							 var data = {};
				            	if($(this).is(":checked")){
						    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						    data["highRelationShipBalance"] = tds.eq(0).text();
						    data["minAge"] = tds.eq(1).text();
						    data["maxAge"] = tds.eq(2).text();
						    data["custType"] = tds.eq(3).text();
						    data["riskScore"] = tds.eq(4).text();
						    tds.eq(5).text("");
							tds.eq(6).text("");
						    data["modifiedRiskScore"] = "";
							data["modifiedWorkflowStatus"] = tds.eq(6).text();
						    data["pickListType"] = tds.eq(8).text();
						    data["createId"] = tds.eq(20).text();
						    data["createDate"] = new Date(tds.eq(22).text());
						    data["parentPickListType"] = tds.eq(12).text();
						    data["parentPickListId"] = tds.eq(13).text();
						    data["pickListId"] = tds.eq(14).text();
						    data["minAgePickListId"]= tds.eq(15).text();
						    data["maxAgePickListId"]= tds.eq(16).text();
						    data["custTypePickListId"] = tds.eq(17).text();
						    data["parentPickListCode"] = tds.eq(18).text();
						    data["authStatus"] = "DELETE_PENDING";
						    data["comments"] = loadComments();
						    list.push(data);
				            	}
						 });
						}
						else if(deletebuttonName === "deleteAgeCard"){
						 $("table tbody").find('input[name="ageCardCheckBox"]').each(function(){
							 var data = {};
				            	if($(this).is(":checked")){
						    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						    data["creditLimit"] = tds.eq(0).text();
						    data["minAge"] = tds.eq(1).text();
						    data["maxAge"] = tds.eq(2).text();
						    data["custType"] = tds.eq(3).text();
						    data["riskScore"] = tds.eq(4).text();
						    data["modifiedRiskScore"] = "";
							data["modifiedWorkflowStatus"] = tds.eq(6).text();
						    data["pickListType"] = tds.eq(8).text();
						    data["createId"] = tds.eq(20).text();
						    data["createDate"] = new Date(tds.eq(22).text());
						    data["parentPickListType"] = tds.eq(12).text();
						    data["parentPickListId"] = tds.eq(13).text();
						    data["pickListId"] = tds.eq(14).text();
						    data["minAgePickListId"]= tds.eq(15).text();
						    data["maxAgePickListId"]= tds.eq(16).text();
						    data["custTypePickListId"] = tds.eq(17).text();
						    data["parentPickListCode"] = tds.eq(18).text();
						    data["authStatus"] = "DELETE_PENDING";
						    data["comments"] = loadComments();
						    list.push(data);
				            	}
						 });
						}
						else if(deletebuttonName === "deleteAgeUPL"){
						 
						 $("table tbody").find('input[name="ageUPLCheckBox"]').each(function(){
							 var data = {};
				            	if($(this).is(":checked")){
						    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						    data["loanAmount"] = tds.eq(0).text();
						    data["minAge"] = tds.eq(1).text();
						    data["maxAge"] = tds.eq(2).text();
						    data["custType"] = tds.eq(3).text();
						    data["riskScore"] = tds.eq(4).text();
						    data["modifiedRiskScore"] = "";
							data["modifiedWorkflowStatus"] = tds.eq(6).text();
						    data["pickListType"] = tds.eq(8).text();
						    data["createId"] = tds.eq(20).text();
						    data["createDate"] = new Date(tds.eq(22).text());
						    data["parentPickListType"] = tds.eq(12).text();
						    data["parentPickListId"] = tds.eq(13).text();
						    data["pickListId"] = tds.eq(14).text();
						    data["minAgePickListId"]= tds.eq(15).text();
						    data["maxAgePickListId"]= tds.eq(16).text();
						    data["custTypePickListId"] = tds.eq(17).text();
						    data["parentPickListCode"] = tds.eq(18).text();
						    data["authStatus"] = "DELETE_PENDING";
						    data["comments"] = loadComments();
						    list.push(data);
				            	}
						 });
						}
						 if ($('textarea#checkerComment').val() !== null && $('textarea#checkerComment').val() !== undefined && $('textarea#checkerComment').val() !=='') {
							 deleteConfigRules(list);
						 } else {
							 $("#checkerStatusDivPopup").html(commentsRequired);
						 }
						 
						
					});
				 function deleteConfigRules(list) {
					 closeCheckerStatusPopup();
					showPopupLoader();
            		 $.ajax({
            		        type: "POST",
            		        contentType: "application/json",
            		        url: "countryRiskOverride/delete",
            		        data: JSON.stringify(list),
            		        dataType: 'json',
            		        timeout: 600000,
            		        success: function (response) {
    					    	if(response.pickListType === 'PBOC_RISK_SCORE_MODE_OF_ACCT_CARD'){
    					    		 $("table tbody").find('input[name="accountOpenModeCheckBox"]').each(function(){
    						            	if($(this).is(":checked")){
    						            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
    										    tds = row.find("td"); 
    									    	tds.eq(3).text(response.modifiedWorkflowStatus);
    									    	tds.eq(6).text(response.lastUpdatedBy);
    									    	tds.eq(7).text(convertDate(response.lastUpdatedDate));
    									    	$('.accountOpenModeCheckBox:checked').attr("disabled", true);
    						            	}
    					    		
    					    	});
    					    	}
    					    	
    					    	else if(response.pickListType === 'PBOC_RISK_SCORE_IND_ID_TYPE'){
   					    		 $("table tbody").find('input[name="docTypeCheckBox"]').each(function(){
   						            	if($(this).is(":checked")){
   						            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
   										    tds = row.find("td"); 
   									    	tds.eq(3).text(response.modifiedWorkflowStatus);
   									    	tds.eq(6).text(response.lastUpdatedBy);
									    	tds.eq(7).text(convertDate(response.lastUpdatedDate));
								         	$('.docTypeCheckBox:checked').attr("disabled", true);
   						            	}
   					    		
   					    	});
   					    	}
   					    	
   					    	else if(response.pickListType === 'PBOC_RISK_SCORE_AGE_RETAIL'){
   					    		 $("table tbody").find('input[name="ageRetailCheckBox"]').each(function(){
   						            	if($(this).is(":checked")){
   						            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
   										    tds = row.find("td"); 
   									    	tds.eq(6).text(response.modifiedWorkflowStatus);
   									    	tds.eq(10).text(response.lastUpdatedBy);
									    	tds.eq(11).text(convertDate(response.lastUpdatedDate));
								         	$('.ageRetailCheckBox:checked').attr("disabled", true);
   						            	}
   					    		
   					    	});
   					    	}
   					    	
   					    	else if(response.pickListType === 'PBOC_RISK_SCORE_AGE_CARD'){
   					    		 $("table tbody").find('input[name="ageCardCheckBox"]').each(function(){
   						            	if($(this).is(":checked")){
   						            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
   										    tds = row.find("td"); 
   									    	tds.eq(6).text(response.modifiedWorkflowStatus);
   									    	tds.eq(10).text(response.lastUpdatedBy);
									    	tds.eq(11).text(convertDate(response.lastUpdatedDate));
								         	$('.ageCardCheckBox:checked').attr("disabled", true);
   						            	}
   					    		
   					    	});
   					    	}
   					    	
   					    	else if(response.pickListType === 'PBOC_RISK_SCORE_AGE_UPL'){
   					    		 $("table tbody").find('input[name="ageUPLCheckBox"]').each(function(){
   						            	if($(this).is(":checked")){
   						            		var row = $(this).closest("tr"),       // Finds the closest row <tr> 
   										    tds = row.find("td"); 
   									    	tds.eq(6).text(response.modifiedWorkflowStatus);
   									    	tds.eq(10).text(response.lastUpdatedBy);
									    	tds.eq(11).text(convertDate(response.lastUpdatedDate));
								         	$('.ageUPLCheckBox:checked').attr("disabled", true);
   						            	}
   					    		
   					    	});
   					    	}
    					    	closePopupLoader();
    					    	//disableChecker();
    					    	uncheckChecker();
            		        	$("#statusDiv").html(response.statusMessage);
            		        },
            		        error: function (response) {
            		        	$("#errorStatus").html(erroOccured);
            		        	closePopupLoader();
            		        }
            		});

				}
				 $('.btn-historyAccountOpen, .btn-historyCheckerAccOpen').click(function() {
					 clearStatusMessages();
					 uncheckChecker();
					 $("#recordsCount").text("");
					 $(".status").val("ALL");
					 $("#pagination").hide();
					 $( ".datepicker" ).datepicker({ dateFormat: dateFormatDatePicker});
					 var row = $('.refAccountOpen').closest("tr"),       // Finds
					    tds = row.find("td"); 
					 $(".fromDate").val("");
					 $(".toDate").val("");
					 displayHistoryPopup();
					 pickListType = 'PBOC_RISK_SCORE_MODE_OF_ACCT_CARD';
				}); 
				 
				
				$('.btn-historyDocType, .btn-historyCheckerDocType').click(function() {
					clearStatusMessages();
					uncheckChecker();
					 $("#recordsCount").text("");
					 $(".status").val("ALL");
					 $("#pagination").hide();
					 $( ".datepicker" ).datepicker({ dateFormat: dateFormatDatePicker});
					 var row = $('.refDocType').closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					 $(".fromDate").val("");
					 $(".toDate").val("");
					 displayHistoryPopup();
					 pickListType = 'PBOC_RISK_SCORE_IND_ID_TYPE';
				}); 
				
				$('.btn-historyAgeRetail, .btn-historyCheckerAgeRetail').click(function() {
					clearStatusMessages();
					uncheckChecker();
					 $("#recordsCount").text("");
					 $(".status").val("ALL");
					 $("#pagination").hide();
					 $( ".datepicker" ).datepicker({ dateFormat: dateFormatDatePicker});
					 var row = $('.refAgeRetail').closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					 $(".fromDate").val("");
					 $(".toDate").val("");
					 displayHistoryPopup();
					 pickListType = 'PBOC_RISK_SCORE_AGE_RETAIL_PARAMS';
					 parentPickListType = 'PBOC_RISK_SCORE_AGE_RETAIL';
				}); 
				
				$('.btn-historyAgeCard, .btn-historyCheckerAgeCard').click(function() {
					clearStatusMessages();
					uncheckChecker();
					 $("#recordsCount").text("");
					 $(".status").val("ALL");
					 $("#pagination").hide();
					 $( ".datepicker" ).datepicker({ dateFormat: dateFormatDatePicker});
					 var row = $('.refAgeCard').closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					 $(".fromDate").val("");
					 $(".toDate").val("");
					 displayHistoryPopup();
					 pickListType = 'PBOC_RISK_SCORE_AGE_CARD_PARAMS';
					 parentPickListType = 'PBOC_RISK_SCORE_AGE_CARD';
				});
				
				$('.btn-historyAgeUPL, .btn-historyCheckerAgeUPL').click(function() {
					clearStatusMessages();
					uncheckChecker();
					 $("#recordsCount").text("");
					 $(".status").val("ALL");
					 $("#pagination").hide();
					 $( ".datepicker" ).datepicker({ dateFormat: dateFormatDatePicker});
					 var row = $('.refAgeUPL').closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					 $(".fromDate").val("");
					 $(".toDate").val("");
					 displayHistoryPopup();
					 pickListType = 'PBOC_RISK_SCORE_AGE_UPL_PARAMS';
					 parentPickListType = 'PBOC_RISK_SCORE_AGE_UPL';
				});
				
				$(".btn-closeHistoryPopup").click(function(){
					closeHistoryPopup();
					
				});
				$(".btn-closeEditAddPopup").click(function(){
					closeEditAddPopup();
				});
				 
				function convertDate(stringDate)
					{
					 if(stringDate != null){
						 return stringDate;
					 }
					 else
						 return "-";
					}
				
				function validateComments(comments)
				{
					 if(comments != null){
						 return comments;
					 }
					 else
						 return "-";
				}

				 $("#btn-systemRiskOverrideHistory").click(function(){
					 if(validateDate() === true){
					 showPopupLoader();
					 loadDataTable(1);
					 }
								});
				 
				 function loadHistory()
				 {
					 $('#tblHistory tbody').empty();
					 $('#tblDataHistory tbody').empty();
					 if(pickListType === 'PBOC_RISK_SCORE_MODE_OF_ACCT_CARD'){
						 var data = {};
						data["pickListType"] = pickListType;
						data["fromDate"] = $(".fromDate").val();
						data["toDate"] = $(".toDate").val();
						data["authStatus"] = $(".status :selected").text();
						getTotalPickListCount(data);
						data["pageCount"] = 15;
						data["pageNumber"] = $("#pageNo").val();
					    $.ajax  
					    ({  
					    	type: "POST",
					        contentType: "application/json",
					        url: "countryRiskOverride/loadHistory",
					        data: JSON.stringify(data),
					        dataType: 'json',
					        timeout: 600000,
					        success: function (data)    
					        {  
					        	if(data.length>0){
					        		AjaxGetSearchDataSucceeded(data);
					        		 var rows = "<tr>" +  
						                "<th width='10%' align='left' class='table_header'>"+modeOfAccountOpen+"</th>"+
						                "<th width='10%' align='left' class='table_header'>"+riskScore+"</th>"+
						                "<th width='10%' align='left' class='table_header'>"+workflowStatus+"</th>"+
						                "<th width='10%' align='left' class='table_header'>"+createdBy+"</th>"+
						                "<th width='10%' align='left' class='table_header'>"+createdDt+"</th>"+
						                "<th width='10%' align='left' class='table_header'>"+modifiedBy+"</th>"+
						                "<th width='10%' align='left' class='table_header'>"+modifiedDt+"</th>" +  
						                "<th width='30%' align='left' class='table_header'>"+commentsLbl+"</th>" +  
						                "</tr>"; 
					        		 $('#tblHistory tbody').append(rows);
					            var items = '';  
					            $.each(data, function(i, item)  
					            {  
					            	createDate = convertDate(item.createDate);
					            	lastUpdatedDate = convertDate(item.lastUpdatedDate);
					            	comments = validateComments(item.comments);
					                 var rows = "<tr>" +  
					                    "<td width='10%' align='left'>" + item.modeOfAccountOpening + "</td>" +  
					                    "<td width='10%' align='center'>" + item.riskScore + "</td>" +  
					                    "<td width='10%' align='left'>" + item.authStatus + "</td>" +  
					                    "<td width='10%' align='left'>" + item.createdBy + "</td>" +  
					                    "<td width='10%' align='left'>" + createDate + "</td>" +  
					                    "<td width='10%' align='left'>" + item.lastUpdatedBy + "</td>" +
					                    "<td width='10%' align='left'>" + lastUpdatedDate + "</td>" +
					                    "<td width='30%' align='center'>" + comments + "</td>" +
					                    "</tr>";  
					                $('#tblDataHistory tbody').append(rows);   
					            });
					        	}
					        	else{
					        		  var tData = "<tr>" +  
					                    "<td colspan='8' align='center'>"+noDataAvailable+"</td>" +  
					                    "</tr>"; 
					        		  $('#tblHistory tbody').append(tData);   
					        	}
					        	closePopupLoader();
					        	$('#greyout').show();
					        	if($("#recordsCount").text() == 0)
				        			$("#pagination").hide();
					        	else
					        	 $("#pagination").show();
					        },  
					        error: function(ex)  
					        {  closePopupLoader();
					            var r = jQuery.parseJSON(data.responseText);  
					            alert("Message: " + r.Message);  
					            
					        }  
					    });  
					    return false;  
					 }
						
					 else if(pickListType === 'PBOC_RISK_SCORE_IND_ID_TYPE'){
					  $('#greyout').hide();
							var data = {};
							data["pickListType"] = pickListType;
							data["fromDate"] = $(".fromDate").val();
							data["toDate"] = $(".toDate").val();
							data["authStatus"] = $(".status :selected").text();
							getTotalPickListCount(data);
							data["pageCount"] = 15;
							data["pageNumber"] = $("#pageNo").val();
						    $.ajax  
						    ({  
						    	type: "POST",
						        contentType: "application/json",
						        url: "countryRiskOverride/loadHistory",
						        data: JSON.stringify(data),
						        dataType: 'json',
						        timeout: 600000,
						        success: function (data)    
						        { 
						        	if(data.length>0){
								    	AjaxGetSearchDataSucceeded(data);
						            var items = '';  
						            var rows = "<tr>" +  
						                "<th width='10%' align='left' class='table_header'>"+idType+"</th>"+
						                "<th width='10%' align='left' class='table_header'>"+riskScore+"</th>"+
						                "<th width='10%' align='left' class='table_header'>"+workflowStatus+"</th>"+
						                "<th width='10%' align='left' class='table_header'>"+createdBy+"</th>"+
						                "<th width='10%' align='left' class='table_header'>"+createdDt+"</th>"+
						                "<th width='10%' align='left' class='table_header'>"+modifiedBy+"</th>"+
						                "<th width='10%' align='left' class='table_header'>"+modifiedDt+"</th>" +   
						                "<th width='30%' align='left' class='table_header'>"+commentsLbl+"</th>" +  
						                "</tr>";  
						            $('#tblHistory tbody').append(rows);  

						            $.each(data, function(i, item){
						            	createDate = convertDate(item.createDate);
						            	lastUpdatedDate = convertDate(item.lastUpdatedDate);
						            	comments = validateComments(item.comments);
						                 var rows = "<tr>" +  
						                    "<td width='10%' align='left'>" + item.idType + "</td>" +  
						                    "<td width='10%' align='center'>" + item.riskScore + "</td>" +  
						                    "<td width='10%' align='left'>" + item.authStatus + "</td>" +  
						                    "<td width='10%' align='left'>" + item.createdBy + "</td>" +  
						                    "<td width='10%' align='left'>" + createDate + "</td>" +  
						                    "<td width='10%' align='left'>" + item.lastUpdatedBy + "</td>" +
						                    "<td width='10%' align='left'>" + lastUpdatedDate + "</td>" +
						                    "<td width='30%' align='center'>" + comments + "</td>" +
						                    "</tr>";  
						                 $('#tblDataHistory tbody').append(rows);   
						            });  
						        	}
						        	
						        	else{
						        		  var tData = "<tr>" +  
						                    "<td colspan='8' align='center'>"+noDataAvailable+"</td>" +  
						                    "</tr>"; 
						        		  $('#tblHistory tbody').append(tData);   
						        	}
						        	if($("#recordsCount").text() == 0)
					        			$("#pagination").hide();
						        	else
						        	 $("#pagination").show();
						        	 $('#greyout').show();
						        	closePopupLoader();
						        },  
						        error: function(ex)  
						        {  
						        	closePopupLoader();
						            var r = jQuery.parseJSON(data.responseText);  
						            alert("Message: " + r.Message);  
						        }  
						    });  
						    return false;  
							}
					 else if(pickListType === 'PBOC_RISK_SCORE_AGE_RETAIL_PARAMS'){
									var data = {};
									data["pickListType"] = pickListType;
									data["parentPickListType"] = parentPickListType;
									data["fromDate"] = $(".fromDate").val();
									data["toDate"] = $(".toDate").val();
									data["authStatus"] = $(".status :selected").text();
									getTotalPickListCount(data);
									data["pageCount"] = 15;
									data["pageNumber"] = $("#pageNo").val();
								    $.ajax  
								    ({  
								    	type: "POST",
								        contentType: "application/json",
								        url: "countryRiskOverride/loadHistory",
								        data: JSON.stringify(data),
								        dataType: 'json',
								        timeout: 600000,
								        success: function (data)    
								        {  
								        	if(data.length>0){
								        		AjaxGetSearchDataSucceeded(data);
								            var items = '';  
								            var rows = "<tr>" +  
								                "<th width='9%' align='left' class='table_header'>"+highRelBal+"</th>"+
								                "<th width='6%' align='left' class='table_header'>"+minAge+"</th>"+
								                "<th width='6%' align='left' class='table_header'>"+maxAge+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+custType+"</th>"+
								                "<th width='7%' align='left' class='table_header'>"+riskScore+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+workflowStatus+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+createdBy+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+createdDt+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+modifiedBy+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+modifiedDt+"</th>" +   
								                "<th width='15%' align='left' class='table_header'>"+commentsLbl+"</th>" +  
								                "</tr>";  
								            $('#tblHistory tbody').append(rows);  

								            $.each(data, function(i, item)  
								            {  
								            	createDate = convertDate(item.createDate);
								            	lastUpdatedDate = convertDate(item.lastUpdatedDate);
								            	comments = validateComments(item.comments);
								                 var rows = "<tr>" +  
								                    "<td width='9%' align='center'>" + item.highRelationShipBalance + "</td>" +  
								                    "<td width='6%' align='center'>" + item.minAge + "</td>" + 
								                    "<td width='6%' align='center'>" + item.maxAge + "</td>" + 
								                    "<td width='9%' align='center'>" + item.custType + "</td>" +  
								                    "<td width='7%' align='center'>" + item.riskScore + "</td>" + 
								                    "<td width='9%' align='center'>" + item.authStatus + "</td>" +  
								                    "<td width='9%' align='center'>" + item.createdBy + "</td>" +  
								                    "<td width='9%' align='center'>" + createDate + "</td>" +  
								                    "<td width='9%' align='center'>" + item.lastUpdatedBy + "</td>" +
								                    "<td width='9%' align='center'>" + lastUpdatedDate + "</td>" +
								                    "<td width='15%' align='center'>" + comments + "</td>" +
								                    "</tr>";  
								                 $('#tblDataHistory tbody').append(rows);   
								            });  
								        	}
								        	else{
								        		  var tData = "<tr>" +  
								                    "<td colspan='11' align='center'>"+noDataAvailable+"</td>" +  
								                    "</tr>"; 
								        		  $('#tblHistory tbody').append(tData);   
								        	}
								        	if($("#recordsCount").text() == 0)
							        			$("#pagination").hide();
								        	else
								        	 $("#pagination").show();
								        	$('#greyout').show();
								        	closePopupLoader();
								        	
								        },  
								        error: function(ex)  
								        {  
								            var r = jQuery.parseJSON(data.responseText);  
								            closePopupLoader();
								            alert("Message: " + r.Message);  
								        }  
								    });  
								    return false;  
									} 
								
					 else if(pickListType === 'PBOC_RISK_SCORE_AGE_CARD_PARAMS'){
									var data = {};
									data["pickListType"] = pickListType;
									data["parentPickListType"] = parentPickListType;
									data["fromDate"] = $(".fromDate").val();
									data["toDate"] = $(".toDate").val();
									data["authStatus"] = $(".status :selected").text();
									getTotalPickListCount(data);
									data["pageCount"] = 15;
									data["pageNumber"] = $("#pageNo").val();
								    $.ajax  
								    ({  
								    	type: "POST",
								        contentType: "application/json",
								        url: "countryRiskOverride/loadHistory",
								        data: JSON.stringify(data),
								        dataType: 'json',
								        timeout: 600000,
								        success: function (data)    
								        {  
								        	if(data.length>0){
								        		AjaxGetSearchDataSucceeded(data);
								            var items = '';  
								            var rows = "<tr>" +  
								                "<th width='9%' align='left' class='table_header'>"+creditLimit+"</th>"+
								                "<th width='6%' align='left' class='table_header'>"+minAge+"</th>"+
								                "<th width='6%' align='left' class='table_header'>"+maxAge+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+custType+"</th>"+
								                "<th width='7%' align='left' class='table_header'>"+riskScore+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+workflowStatus+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+createdBy+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+createdDt+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+modifiedBy+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+modifiedDt+"</th>" +   
								                "<th width='15%' align='left' class='table_header'>"+commentsLbl+"</th>" + 
								                "</tr>";  
								            $('#tblHistory tbody').append(rows);  

								            $.each(data, function(i, item)  
								            {  
								            	createDate = convertDate(item.createDate);
								            	lastUpdatedDate = convertDate(item.lastUpdatedDate);
								            	comments = validateComments(item.comments);
								                 var rows = "<tr>" +  
								                    "<td width='9%' align='center'>" + item.creditLimit + "</td>" +  
								                    "<td width='6%' align='center'>" + item.minAge + "</td>" + 
								                    "<td width='6%' align='center'>" + item.maxAge + "</td>" + 
								                    "<td width='9%' align='center'>" + item.custType + "</td>" +
								                    "<td width='7%' align='center'>" + item.riskScore + "</td>" +  
								                    "<td width='9%' align='center'>" + item.authStatus + "</td>" +  
								                    "<td width='9%' align='center'>" + item.createdBy + "</td>" +  
								                    "<td width='9%' align='center'>" + createDate + "</td>" +  
								                    "<td width='9%' align='center'>" + item.lastUpdatedBy + "</td>" +
								                    "<td width='9%' align='center'>" + lastUpdatedDate + "</td>" +
								                    "<td width='15%' align='center'>" + comments + "</td>" +
								                    "</tr>";  
								                 $('#tblDataHistory tbody').append(rows);     
								            });  
								        	}
								        	else{
								        		  var tData = "<tr>" +  
								                    "<td colspan='11' align='center'>"+noDataAvailable+"</td>" +  
								                    "</tr>"; 
								        		  $('#tblHistory tbody').append(tData);   
								        	}
								        	if($("#recordsCount").text() == 0)
							        			$("#pagination").hide();
								        	else
								        	 $("#pagination").show();
								        	$('#greyout').show();
								        	closePopupLoader();
								        },  
								        error: function(ex)  
								        {  
								        	closePopupLoader();
								            var r = jQuery.parseJSON(data.responseText);  
								            alert("Message: " + r.Message);  
								        }  
								    });  
								    return false;  
									}
								
							 
					 else if(pickListType === 'PBOC_RISK_SCORE_AGE_UPL_PARAMS'){
									var data = {};
									data["pickListType"] = pickListType;
									data["parentPickListType"] = parentPickListType;
									data["fromDate"] = $(".fromDate").val();
									data["toDate"] = $(".toDate").val();
									data["authStatus"] = $(".status :selected").text();
									getTotalPickListCount(data);
									data["pageCount"] = 15;
									data["pageNumber"] = $("#pageNo").val();
									
								    $.ajax  
								    ({  
								    	type: "POST",
								        contentType: "application/json",
								        url: "countryRiskOverride/loadHistory",
								        data: JSON.stringify(data),
								        dataType: 'json',
								        timeout: 600000,
								        success: function (data)    
								        {  
								        	if(data.length>0){
								        		AjaxGetSearchDataSucceeded(data);
								            var items = '';  
								            var rows = "<tr>" +  
								                "<th width='9%' align='left' class='table_header'>"+loanAmount+"</th>"+
								                "<th width='6%' align='left' class='table_header'>"+minAge+"</th>"+
								                "<th width='6%' align='left' class='table_header'>"+maxAge+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+custType+"</th>"+
								                "<th width='7%' align='left' class='table_header'>"+riskScore+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+workflowStatus+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+createdBy+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+createdDt+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+modifiedBy+"</th>"+
								                "<th width='9%' align='left' class='table_header'>"+modifiedDt+"</th>" +   
								                "<th width='15%' align='left' class='table_header'>"+commentsLbl+"</th>" +   
								                "</tr>";  
								            $('#tblHistory tbody').append(rows);  

								            $.each(data, function(i, item)  
								            {  
								            	createDate = convertDate(item.createDate);
								            	lastUpdatedDate = convertDate(item.lastUpdatedDate);
								            	comments = validateComments(item.comments);
								                 var rows = "<tr>" +  
								                    "<td width='9%' align='center'>" + item.loanAmount + "</td>" +  
								                    "<td width='6%' align='center'>" + item.minAge + "</td>" + 
								                    "<td width='6%' align='center'>" + item.maxAge + "</td>" + 
								                    "<td width='9%' align='center'>" + item.custType + "</td>" +
								                    "<td width='7%' align='center'>" + item.riskScore + "</td>" +  
								                    "<td width='9%' align='center'>" + item.authStatus + "</td>" +  
								                    "<td width='9%' align='center'>" + item.createdBy + "</td>" +  
								                    "<td width='9%' align='center'>" + createDate + "</td>" +  
								                    "<td width='9%' align='center'>" + item.lastUpdatedBy + "</td>" +
								                    "<td width='9%' align='center'>" + lastUpdatedDate + "</td>" +
								                    "<td width='15%' align='center'>" + comments + "</td>" +
								                    "</tr>";  
								                 $('#tblDataHistory tbody').append(rows);     
								            });  
								        	}
								        	else{
								        		  var tData = "<tr>" +  
								                    "<td colspan='10' align='center'>"+noDataAvailable+"</td>" +  
								                    "</tr>"; 
								        		  $('#tblHistory tbody').append(tData);   
								        	}
								        	if($("#recordsCount").text() == 0)
							        			$("#pagination").hide();
								        	else
								        	 $("#pagination").show();
								        	$('#greyout').show();
								        	closePopupLoader();
								        },  
								        error: function(ex)  
								        {  
								        	closePopupLoader();
								            var r = jQuery.parseJSON(data.responseText);  
								            alert("Message: " + r.Message);  
								        }  
								    });  
								    return false;  
									}
				 }
				 function getApprovedAuthStatus(status)
				 	{	
					 if(status === 'UPDATE_PENDING')
            			 status = 'UPDATE_APPROVED';
            		 if(status === 'ADD_PENDING')
            			 status = 'ADD_APPROVED';
            		 if(status === 'DELETE_PENDING')
            			 status = 'DELETE_APPROVED';
            		 return status;
				 	}
				 
				 function getRejectedAuthStatus(status)
				 	{	
					 if(status === 'UPDATE_PENDING')
            			 status = 'UPDATE_REJECTED';
            		 if(status === 'ADD_PENDING')
            			 status = 'ADD_REJECTED';
            		 if(status === 'DELETE_PENDING')
            			 status = 'DELETE_REJECTED';
            		 return status;
				 	}
				 function loadEmptyData(data)
				 {
					 data["modeOfAccountOpening"] = "";
					 data["modeOfAccountOpening"] = "";
					 data["highRelationShipBalance"] = "";
					 data["creditLimit"] = "";
					 data["loanAmount"] = "";
					    data["minAge"] = "";
					    data["maxAge"] = "";
					    data["custType"] = "";
					    data["riskScore"] = "";
					    data["modifiedRiskScore"] = "";
						data["modifiedWorkflowStatus"] = "";
					    data["pickListType"] = "";
					    data["createDate"] = "";
					    data["parentPickListType"] = "";
					    data["parentPickListId"] = "";
					    data["pickListId"] = "";
					    data["minAgePickListId"]= "";
					    data["maxAgePickListId"]= "";
					    data["parentPickListCode"] = "";
				 }
				 
				 function readDataAccOpen(data, tds){
						 loadEmptyData(data);
						 	data["modeOfAccountOpening"] = tds.eq(0).text();
						    data["riskScore"] = tds.eq(1).text();
						    data["modifiedRiskScore"] = tds.eq(2).text();
							data["modifiedWorkflowStatus"] = tds.eq(3).text();
							data["createId"] = tds.eq(11).text();
						    data["createDate"] = tds.eq(13).text();
						    data["lastUpdatedId"] = tds.eq(12).text();
						    data["pickListType"] = 'PBOC_RISK_SCORE_MODE_OF_ACCT_CARD';
						    data["pickListId"] = tds.eq(9).text();
						    data["authStatus"] = tds.eq(10).text();
					 return data;
				 }
				 
				 function readDataDocType(data, tds){
						 loadEmptyData(data);
						 	data["idType"] = tds.eq(0).text();
						    data["riskScore"] = tds.eq(1).text();
						    data["modifiedRiskScore"] = tds.eq(2).text();
							data["modifiedWorkflowStatus"] = tds.eq(3).text();
							data["createId"] = tds.eq(11).text();
						    data["createDate"] = tds.eq(13).text();
						    data["lastUpdatedId"] = tds.eq(12).text();
						    data["pickListType"] = 'PBOC_RISK_SCORE_IND_ID_TYPE';
						    data["pickListId"] = tds.eq(9).text();
						    data["authStatus"] = tds.eq(10).text();
					 return data;
				 }
				 
				 function readDataAgeRetail(data, tds){
						 loadEmptyData(data);
						 	data["highRelationShipBalance"] = tds.eq(0).text();
						    data["minAge"] = tds.eq(1).text();
						    data["maxAge"] = tds.eq(2).text();
						    data["custType"] = tds.eq(3).text();
						    data["riskScore"] = tds.eq(4).text();
						    data["modifiedRiskScore"] = tds.eq(5).text();
							data["modifiedWorkflowStatus"] = tds.eq(6).text();
						    data["pickListType"] = 'PBOC_RISK_SCORE_AGE_RETAIL_PARAMS';
						    data["createDate"] = tds.eq(22).text();
						    data["createId"] = tds.eq(20).text();
						    data["lastUpdatedId"] = tds.eq(21).text();
						    data["parentPickListType"] = 'PBOC_RISK_SCORE_AGE_RETAIL';
						    data["parentPickListId"] = tds.eq(13).text();
						    data["pickListId"] = tds.eq(14).text();
						    data["minAgePickListId"]= tds.eq(15).text();
						    data["maxAgePickListId"]= tds.eq(16).text();
						    data["custTypePickListId"] = tds.eq(17).text();
						    data["authStatus"] = tds.eq(18).text();
						    data["parentPickListCode"] = tds.eq(19).text();
					 return data;
				 }
				 
				 function readDataAgeCard(data, tds){
						 loadEmptyData(data);
						 	data["creditLimit"] = tds.eq(0).text();
						    data["minAge"] = tds.eq(1).text();
						    data["maxAge"] = tds.eq(2).text();
						    data["custType"] = tds.eq(3).text();
						    data["riskScore"] = tds.eq(4).text();
						    data["modifiedRiskScore"] = tds.eq(5).text();
							data["modifiedWorkflowStatus"] = tds.eq(6).text();
						    data["pickListType"] = 'PBOC_RISK_SCORE_AGE_CARD_PARAMS';
						    data["createDate"] = tds.eq(22).text();
						    data["createId"] = tds.eq(20).text();
						    data["lastUpdatedId"] = tds.eq(21).text();
						    data["parentPickListType"] = 'PBOC_RISK_SCORE_AGE_CARD';
						    data["parentPickListId"] = tds.eq(13).text();
						    data["pickListId"] = tds.eq(14).text();
						    data["minAgePickListId"]= tds.eq(15).text();
						    data["maxAgePickListId"]= tds.eq(16).text();
						    data["custTypePickListId"] = tds.eq(17).text();
						    data["authStatus"] = tds.eq(18).text();
						    data["parentPickListCode"] = tds.eq(19).text();
					 return data;
				 }
				 function readDataAgeUPL(data, tds){
						 	loadEmptyData(data);
						 	data["loanAmount"] = tds.eq(0).text();
						    data["minAge"] = tds.eq(1).text();
						    data["maxAge"] = tds.eq(2).text();
						    data["custType"] = tds.eq(3).text();
						    data["riskScore"] = tds.eq(4).text();
						    data["modifiedRiskScore"] = tds.eq(5).text();
							data["modifiedWorkflowStatus"] = tds.eq(6).text();
						    data["pickListType"] = 'PBOC_RISK_SCORE_AGE_UPL_PARAMS';
						    data["createDate"] = tds.eq(22).text();
						    data["createId"] = tds.eq(20).text();
						    data["lastUpdatedId"] = tds.eq(21).text();
						    data["parentPickListType"] = 'PBOC_RISK_SCORE_AGE_UPL';
						    data["parentPickListId"] = tds.eq(13).text();
						    data["pickListId"] = tds.eq(14).text();
						    data["minAgePickListId"]= tds.eq(15).text();
						    data["maxAgePickListId"]= tds.eq(16).text();
						    data["custTypePickListId"] = tds.eq(17).text();
						    data["authStatus"] = tds.eq(18).text();
						    data["parentPickListCode"] = tds.eq(19).text();
					 return data;
				 }
				 
				 function loadComments(){
					 var comments = $('textarea#checkerComment').val();
					 return comments;
				 }
				 
				 $("#checkerApprovePopupSubmitbtn").click(function(){
					 var list = [];
					 $("table tbody").find('input[name="checkerAccountOpenCheckBox"]').each(function(){
						 var data = {};
			            	if($(this).is(":checked")){
					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					    data = readDataAccOpen(data, tds);
	            		 data["authStatus"] = getApprovedAuthStatus(data["authStatus"]);
	            		 data["comments"] = loadComments();
					    list.push(data);
			            	}
					 });
				 			 
					 $("table tbody").find('input[name="checkerDocTypeCheckBox"]').each(function(){
						 var data = {};
			            	if($(this).is(":checked")){
					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					    data = readDataDocType(data, tds);
					    data["authStatus"] = getApprovedAuthStatus(data["authStatus"]);
	            		 data["comments"] = loadComments();
					    list.push(data);
			            	}
					 });
								 		
					 $("table tbody").find('input[name="checkerAgeRetailCheckBox"]').each(function(){
						 var data = {};
			            	if($(this).is(":checked")){
					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					    data = readDataAgeRetail(data, tds);
					    data["authStatus"] = getApprovedAuthStatus(data["authStatus"]);
	            		 data["comments"] = loadComments();
					    list.push(data);
			            	}
					 });
					 $("table tbody").find('input[name="checkerAgeCardCheckBox"]').each(function(){
						 var data = {};
			            	if($(this).is(":checked")){
					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					    data = readDataAgeCard(data, tds);
					    data["authStatus"] = getApprovedAuthStatus(data["authStatus"]);
					    data["comments"] = loadComments();
					    list.push(data);
			            	}
					 });
				
					 $("table tbody").find('input[name="checkerAgeUPLCheckBox"]').each(function(){
						 var data = {};
			            	if($(this).is(":checked")){
					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					    data = readDataAgeUPL(data, tds);
					    data["authStatus"] = getApprovedAuthStatus(data["authStatus"]);
	            		 data["comments"] = loadComments();
					    list.push(data);
			            	}
					 });
						
					 if ($('textarea#checkerComment').val() !== null && $('textarea#checkerComment').val() !== undefined && $('textarea#checkerComment').val() !=='') {
						 checkerUpdate(list);
					 } else {
						 $("#checkerStatusDivPopup").html(commentsRequired);
					 }
				 });
				 
				 $(".btn-checkerApproved").click(function(){
					 $("#commentsBox").hide();
					 var accOpenLen = $('.checkerAccountOpenCheckBox:checked').length;
					 var docTypeLen = $('.checkerDocTypeCheckBox:checked').length;
					 var retailLen = $('.checkerAgeRetailCheckBox:checked').length;
					 var cardLen = $('.checkerAgeCardCheckBox:checked').length;
					 var uplLen = $('.checkerAgeUPLCheckBox:checked').length;
					 var len = accOpenLen + docTypeLen + retailLen + cardLen + uplLen;
					 if(len < 1){
						 alert(atleastOneCheckBox);
					 }
					 else{
				
					 $('#approveChecker').show();
					 $('#rejectChecker').hide();
					 $('#deleteComments').hide();
					 displayCheckerStatusPopup();
					 }
				 });
				 
				 $("#checkerRejectPopupSubmitbtn").click(function(){
					 var list = [];
					 $("table tbody").find('input[name="checkerAccountOpenCheckBox"]').each(function(){
						 var data = {};
			            	if($(this).is(":checked")){
					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					    data = readDataAccOpen(data, tds);
					    data["authStatus"] = getRejectedAuthStatus(data["authStatus"]);
	            		 data["comments"] = loadComments();
					    list.push(data);
			            	}
					 });
				 			 
					 $("table tbody").find('input[name="checkerDocTypeCheckBox"]').each(function(){
						 var data = {};
			            	if($(this).is(":checked")){
					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					    data = readDataDocType(data, tds);
					    data["authStatus"] = getRejectedAuthStatus(data["authStatus"]);
	            		 data["comments"] = loadComments();
					    list.push(data);
			            	}
					 });
								 		
					 $("table tbody").find('input[name="checkerAgeRetailCheckBox"]').each(function(){
						 var data = {};
			            	if($(this).is(":checked")){
					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					    data = readDataAgeRetail(data, tds);
					    data["authStatus"] = getRejectedAuthStatus(data["authStatus"]);
	            		 data["comments"] = loadComments();
					    list.push(data);
			            	}
					 });
					 $("table tbody").find('input[name="checkerAgeCardCheckBox"]').each(function(){
						 var data = {};
			            	if($(this).is(":checked")){
					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					    data = readDataAgeCard(data, tds);
					    data["authStatus"] = getRejectedAuthStatus(data["authStatus"]);
	            		 data["comments"] = loadComments();
					    list.push(data);
			            	}
					 });
				
					 $("table tbody").find('input[name="checkerAgeUPLCheckBox"]').each(function(){
						 var data = {};
			            	if($(this).is(":checked")){
					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
					    tds = row.find("td"); 
					    data = readDataAgeUPL(data, tds);
					    data["authStatus"] = getRejectedAuthStatus(data["authStatus"]);
	            		 data["comments"] = loadComments();
					    list.push(data);
			            	}
					 });
					 if ($('textarea#checkerComment').val() !== null && $('textarea#checkerComment').val() !== undefined && $('textarea#checkerComment').val() !=='') {
						 checkerUpdate(list);
					 }  else {
						 $("#checkerStatusDivPopup").html(commentsRequired);
					 }
					 
				 });
				
				 $(".btn-checkerRejected").click(function(){
					 $("#commentsBox").hide();
					 var accOpenLen = $('.checkerAccountOpenCheckBox:checked').length;
					 var docTypeLen = $('.checkerDocTypeCheckBox:checked').length;
					 var retailLen = $('.checkerAgeRetailCheckBox:checked').length;
					 var cardLen = $('.checkerAgeCardCheckBox:checked').length;
					 var uplLen = $('.checkerAgeUPLCheckBox:checked').length;
					 var len = accOpenLen + docTypeLen + retailLen + cardLen + uplLen;
					 if(len < 1){
						 alert(atleastOneCheckBox);
					 }
					 else{
					 displayCheckerStatusPopup();
					 $('#approveChecker').hide();
					 $('#rejectChecker').show();
					 $('#deleteComments').hide();
					 }
				 });
				
				 function checkerUpdate(list) {
					closeCheckerStatusPopup();
					 showPopupLoader();
            		 $.ajax({
            		        type: "POST",
            		        contentType: "application/json",
            		        url: "countryRiskOverride/checkerUpdate",
            		        data: JSON.stringify(list),
            		        dataType: 'json',
            		        timeout: 600000,
            		        success: function (data) {
            		        	 $("table tbody").find('input[name="checkerAccountOpenCheckBox"]').each(function(){
            						 var data = {};
            			            	if($(this).is(":checked")){
            					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
            					    tds = row.find("td"); 
            					    tds.remove();
            			            	}
            		        	 });
            		        	 $("table tbody").find('input[name="checkerDocTypeCheckBox"]').each(function(){
            						 var data = {};
            			            	if($(this).is(":checked")){
            					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
            					    tds = row.find("td"); 
            					    tds.remove();
            			            	}
            		        	 });
            		        	 $("table tbody").find('input[name="checkerAgeRetailCheckBox"]').each(function(){
            						 var data = {};
            			            	if($(this).is(":checked")){
            					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
            					    tds = row.find("td"); 
            					    tds.remove();
            			            	}
            		        	 });
            		        	 $("table tbody").find('input[name="checkerAgeCardCheckBox"]').each(function(){
            						 var data = {};
            			            	if($(this).is(":checked")){
            					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
            					    tds = row.find("td"); 
            					    tds.remove();
            			            	}
            		        	 });
            		        	 $("table tbody").find('input[name="checkerAgeUPLCheckBox"]').each(function(){
            						 var data = {};
            			            	if($(this).is(":checked")){
            					    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
            					    tds = row.find("td"); 
            					    tds.remove();
            			            	}
            		        	 });
            		        	 disableChecker();
            		        	 uncheckChecker();
            		        	
            		         	closePopupLoader();
//            		        	$("#statusDiv").html(data.statusMessage);
            		        	if((data.statusMessage === 'Record updated successfully')){
        					    	$("#statusDiv").html(data.statusMessage);
        					    	}
        					    	else{
        					    	$("#errorStatus").html(data.statusMessage);
        					    	}
            		        },
            		        error: function (xhr, ajaxOptions, thrownError) {
            		        	$("#errorStatus").html(erroOccured);
            		            closePopupLoader();
            		          }
            		});

				}
				
				 function uncheckChecker()
				 	{
		         	$('.accountOpenModeCheckBox:checked').prop('checked', false); 
		         	$('.docTypeCheckBox:checked').prop('checked', false);
		         	$('.ageRetailCheckBox:checked').prop('checked', false);
		         	$('.ageCardCheckBox:checked').prop('checked', false);
		         	$('.ageUPLCheckBox:checked').prop('checked', false);
				}
				
				function disableChecker()
					{
		         	$('.accountOpenModeCheckBox:checked').attr("disabled", true);
		         	$('.docTypeCheckBox:checked').attr("disabled", true);
		         	$('.ageRetailCheckBox:checked').attr("disabled", true);
		         	$('.ageCardCheckBox:checked').attr("disabled", true);
		         	$('.ageUPLCheckBox:checked').attr("disabled", true);
		         	
		            $(".btn-checkerApproved").prop("disabled", true);
		            $(".btn-checkerRejected").prop("disabled", true);
		            $(".btn-checkerComment").prop("disabled", true);
				}

				function displayPopup() {
					 $("#statusDivPopup").html("");
					$('#greyout').show();
		              closePopupLoader();
		              $("#accountOpenComment").val("");
				    	$("#docTypeComment").val("");
				    	$("#ageRetailComment").val("");
				    	$("#ageCardComment").val("");
				    	$("#ageUPLComment").val("");
				    	  $("#editAddpopUp").draggable();
				    	  $("#editAddpopUp").css({"left": "0%","top": "0%"});
		          showPopUp(document.getElementById('editAddpopUp'));
		        
		       }
				
				function displayHistoryPopup() {
					 $("#statusHistory").html("");
					$('#greyout').show();
		              closePopupLoader();
		          	$("#historyPopUp").css({"left": "0%","top": "23%"});
		              $("#historyPopUp").draggable();
		          showPopUp(document.getElementById('historyPopUp'));
		       }
				
				function displayCheckerStatusPopup() {
					 $("#checkerStatusDivPopup").html("");
					$('#greyout').show();
		              closePopupLoader();
		              $("#checkerStatusPopUp").css({"left": "5%","top": "22%"});
		              $("#checkerStatusDivPopup").draggable();
		          showPopUp(document.getElementById('checkerStatusPopUp'));
		       }
				
				function displayCommentsPopup() {
					$("#checkerStatusDivPopup").html("");
					$('#greyout').show();
		              closePopupLoader();
		              $("#commentsPopUp").css({"left": "5%","top": "22%"});
		              $("#commentsPopUp").draggable();
		              showPopUp(document.getElementById('commentsPopUp'));
		         
		       }
				
				function closeEditAddPopup() {
					$('#greyout').hide();
					    document.getElementById("editAddpopUp").style.display = "none";
				}
				
				function closeHistoryPopup() {
					$('#greyout').hide();
					 document.getElementById("historyPopUp").style.display = "none";
					 $("#accountOpenComment").text("");
				    	$("#docTypeComment").val("");
				    	$("#ageRetailComment").val("");
				    	$("#ageCardComment").val("");
				    	$("#ageUPLComment").val("");
				    	$("#totalCount").val("");
				}
				function closeCheckerStatusPopup() {
					$('#greyout').hide();
					if(document.getElementById("checkerStatusPopUp") != null)
					 document.getElementById("checkerStatusPopUp").style.display = "none";
					else if(document.getElementById("commentsPopUp") != null){
						document.getElementById("commentsPopUp").style.display = "none";
					}
					 $("#checkerComment").text("");
				}
				function clearStatusMessages()
				{
					$("#errorStatus").html("");
					$("#statusDiv").html("");
					$("#tblHistory tbody tr").remove();  
					 $('#tblDataHistory tbody').empty();
				}
				$(".btn-closeCheckerStatusPopup").click(function(){
					$("#checkerComment").val("");
					closeCheckerStatusPopup();
				});
				
				 function validateDate() {
				       var fromDate = $(".fromDate").val();
				       var toDate = $(".toDate").val();
				       var now = new Date();
				       var dt1 = Date.parse(now),
				       dt2 = Date.parse(fromDate);
				       if (dt2 > dt1) {
				    	   $("#statusHistory").html(futureDateValidation);
				    	   return false;
				       }
				       else 
				    	   return true;
				 }
				 
				 function validateRetailData(data)
				 {
					 $("#statusDivPopup").html("");
					 var isValidRetailData = true;
					 $("table tbody").find('input[name="ageRetailCheckBox"]').each(function(){
						 var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						 if((data["highRelationShipBalance"] == tds.eq(0).text()) && (data["minAge"] == tds.eq(1).text()) && (data["maxAge"] == tds.eq(2).text()) && (data["custType"] == tds.eq(3).text()) ){
							 $("#statusDivPopup").html(codeValidationMsg);
							 isValidRetailData= false;
						 } 
					 });
					 if(parseInt(data["maxAge"]) <= parseInt(data["minAge"])){
						 $("#statusDivPopup").html(ageDiffValidation);
						 isValidRetailData= false;
					 }
					 if(parseInt(data["minAge"]) > 999){
						 $("#statusDivPopup").html(validMinAge);
						 isValidRetailData= false;
					 }
					 else if(parseInt(data["maxAge"]) > 999){
						 $("#statusDivPopup").html(validMaxAge);
						 isValidRetailData= false;
					 }
					 else if(data["custType"] === 'Select')
							 {
						 $("#statusDivPopup").html(custTypeValidation);
						 isValidRetailData= false;
							 }
					 return isValidRetailData;
				 }
				 
				 function validateMinAgeRetailParams(data)
                 {
                        $("#statusDivPopup").html("");
                        var isValidMinRetail = true;
                        $("table tbody").find('input[name="ageRetailCheckBox"]').each(function(){
                               var row = $(this).closest("tr"),       // Finds the closest row <tr> 
                               	   tds = row.find("td"); 
                                if((data["highRelationShipBalance"] == tds.eq(0).text()) && (data["minAge"] >= tds.eq(1).text() && data["minAge"] < tds.eq(2).text())){
                                      $("#statusDivPopup").html("High Relationship Balance and Age are in existing range");
                                      isValidMinRetail= false;
                               } 
                         });
                        
                        return isValidMinRetail;
                  }
                  
                  function validateMaxAgeRetailParams(data)
                 {
                        $("#statusDivPopup").html("");
                        var isValidMaxAgeRetail = true;
                        $("table tbody").find('input[name="ageRetailCheckBox"]').each(function(){
                               var row = $(this).closest("tr"),       // Finds the closest row <tr> 
                                   tds = row.find("td"); 
                                if((data["highRelationShipBalance"] == tds.eq(0).text())  && (data["maxAge"] > tds.eq(1).text() && data["maxAge"] <= tds.eq(2).text())){
                                      $("#statusDivPopup").html("High Relationship Balance and Age are in existing range");
                                      isValidMaxAgeRetail= false;
                               } 
                         });
                        return isValidMaxAgeRetail;
                  }
				 
				 function validateCardData(data)
				 {
					 $("#statusDivPopup").html("");
					 var isValidCardData = true;
					 $("table tbody").find('input[name="ageCardCheckBox"]').each(function(){
						 var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						 if((data["creditLimit"] == tds.eq(0).text()) && (data["minAge"] == tds.eq(1).text()) && (data["maxAge"] == tds.eq(2).text()) && (data["custType"] == tds.eq(3).text()) ){
							 $("#statusDivPopup").html(codeValidationMsg);
							 isValidCardData= false;
						 } 
						 					 });
					 if(parseInt(data["maxAge"]) <= parseInt(data["minAge"])){
						 $("#statusDivPopup").html(ageDiffValidation);
						 isValidCardData= false;
					 }
					 if(parseInt(data["minAge"]) > 999){
						 $("#statusDivPopup").html(validMinAge);
						 isValidCardData= false;
					 }
					 else if(parseInt(data["maxAge"]) > 999){
						 $("#statusDivPopup").html(validMaxAge);
						 isValidCardData= false;
					 }
					 else if(data["custType"] === 'Select')
					 {
				 $("#statusDivPopup").html(custTypeValidation);
				 isValidCardData= false;
					 }

					 return isValidCardData;
				 }
				 
				 function validateMinAgeCardParams(data)
                 {
                        $("#statusDivPopup").html("");
                        var isValidMinAge = true;
                        $("table tbody").find('input[name="ageCardCheckBox"]').each(function(){
                               var row = $(this).closest("tr"),       // Finds the closest row <tr> 
                                   tds = row.find("td"); 
                                if((data["creditLimit"] == tds.eq(0).text()) && (data["minAge"] >= tds.eq(1).text() && data["minAge"] < tds.eq(2).text())){
                                      $("#statusDivPopup").html("CreditLimt and Age are in existing range");
                                      isValidMinAge= false;
                               } 
                         });
                        return isValidMinAge;
                  }
                  
                  function validateMaxAgeCardParams(data)
                 {
                        $("#statusDivPopup").html("");
                        var isValidcreditMax = true;
                        $("table tbody").find('input[name="ageCardCheckBox"]').each(function(){
                               var row = $(this).closest("tr"),       // Finds the closest row <tr> 
                                   tds = row.find("td"); 
                                if((data["creditLimit"] == tds.eq(0).text())  && (data["maxAge"] > tds.eq(1).text() && data["maxAge"] <= tds.eq(2).text())){
                                      $("#statusDivPopup").html("CreditLimt and Age are in existing range");
                                      isValidcreditMax= false;
                               } 
                         });
                        
                        return isValidcreditMax; 
                  }
				 
				 function validateUPLData(data)
				 {
					 $("#statusDivPopup").html("");
					 var isValidUPLData = true;
					 $("table tbody").find('input[name="ageUPLCheckBox"]').each(function(){
						 var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						 if((data["loanAmount"] == tds.eq(0).text()) && (data["minAge"] == tds.eq(1).text()) && (data["maxAge"] == tds.eq(2).text())){
							 $("#statusDivPopup").html(codeValidationMsg);
							 isValidUPLData= false;
						 } 
					 });
					 if(parseInt(data["maxAge"]) <= parseInt(data["minAge"])){
						 $("#statusDivPopup").html(ageDiffValidation);
						 isValidUPLData= false;
					 }
					 if(parseInt(data["minAge"]) > 999){
						 $("#statusDivPopup").html(validMinAge);
						 isValidUPLData= false;
					 }
					 else if(parseInt(data["maxAge"]) > 999){
						 $("#statusDivPopup").html(validMaxAge);
						 isValidUPLData= false;
					 }
					 else if(data["custType"] === 'Select')
					 {
				 $("#statusDivPopup").html(custTypeValidation);
				 isValidUPLData= false;
					 }
					 return isValidUPLData;
				 }
				 
				 function validateMinAgeUPLParams(data)
                 {
                        $("#statusDivPopup").html("");
                        var isValidMinAgeUPL = true;
                        $("table tbody").find('input[name="ageUPLCheckBox"]').each(function(){
                               var row = $(this).closest("tr"),       // Finds the closest row <tr> 
                                   tds = row.find("td"); 
                                if((data["loanAmount"] == tds.eq(0).text()) && (data["minAge"] >= tds.eq(1).text() && data["minAge"] < tds.eq(2).text())){
                                      $("#statusDivPopup").html("LoanAmount and Age are in existing range");
                                      isValidMinAgeUPL= false;
                               } 
                         });
                        
                        return isValidMinAgeUPL;  
                  }
                  
                  function validateMaxAgeUPLParams(data)
                 {
                        $("#statusDivPopup").html("");
                        var isValidMaxAgeUPL = true;
                        $("table tbody").find('input[name="ageUPLCheckBox"]').each(function(){
                               var row = $(this).closest("tr"),       // Finds the closest row <tr> 
                                   tds = row.find("td"); 
                                if((data["loanAmount"] == tds.eq(0).text())  && (data["maxAge"] > data["minAge"] && data["maxAge"] > tds.eq(1).text() && data["maxAge"] <= tds.eq(2).text())){
                                      $("#statusDivPopup").html("LoanAmount and Age are in existing range");
                                      isValidMaxAgeUPL= false;
                               } 
                         });
                        
                        return isValidMaxAgeUPL; 
                  }
				 
				 
				 
				 function validateCommonFields(field1, minAge, maxAge, comment, riskScore){
					 var isValidCommon = true;
					 if (field1 == null|| field1 == "" || field1 == "NONE") {
	                     $("#statusDivPopup").html(missDataRequired);
	                     isValidCommon= false;
	                                         }
					 if (minAge == null|| minAge == "" || minAge == "NONE") {
	                     $("#statusDivPopup").html(minAgeRequired);
	                     isValidCommon= false;
	                                         }
					 
					 if (maxAge == null|| maxAge == "" || maxAge == "NONE") {
	                     $("#statusDivPopup").html(maxAgeRequired);
	                     isValidCommon= false;
	                                         }
					 
					 if (comment == null|| comment == "" || comment == "NONE") {
	                     $("#statusDivPopup").html(commentsRequired);
	                     isValidCommon= false;
	                                         }
					 
					 if (riskScore == null|| riskScore == "" || riskScore == "NONE" || riskScore =="Select") {
	                     $("#statusDivPopup").html(riskScoreRequired);
	                     isValidCommon= false;
	                                         }
					 return isValidCommon;
				 }
				 
				 function validateFields(field1, comment,riskScore){
					 var isValidFields = true;
					 if (field1 == null|| field1 == "" || field1 == "NONE") {
	                     $("#statusDivPopup").html(missDataRequired);
	                     isValidFields= false;
	                                         }
					 if (comment == null|| comment == "" || comment == "NONE") {
	                     $("#statusDivPopup").html(commentsRequired);
	                     isValidFields= false;
	                                         }
					 
					 if (riskScore == null|| riskScore == "" || riskScore == "NONE" || riskScore =="Select") {
	                     $("#statusDivPopup").html(riskScoreRequired);
	                     isValidFields= false;
	                                         }
					 return isValidFields;
					 
				 }
				 
				 function isNumberKey(evt)
			       {
			          var charCode = (evt.which) ? evt.which : evt.keyCode;
			          if (charCode != 46 && charCode > 31 
			            && (charCode < 48 || charCode > 57)){
			        	  $("#statusDivPopup").html(numbersOnly);
			             return false;
			          }
			          $("#statusDivPopup").html("");
			          return true;
			       }
				 
				 function isCharKey(evt)
			       {
					 var keyCode = (evt.which) ? evt.which : evt.keyCode
						        if ((keyCode < 65 || keyCode > 90) && (keyCode < 97 || keyCode > 123) && keyCode != 32){
		                	 $("#statusDivPopup").html(alphabetsOnly);
				             return false;
				          }
				          $("#statusDivPopup").html("");
				          return true;
			       }
				 if (event.charCode > 57 || event.charCode < 48) {
					    itsNotANumber();
					}
					$('.accountOpenMode').click(function() {

						$('#accountOpenDetails').toggle();
					});

					$('.documentType').click(function() {

						$('#documentTypeDetails').toggle();
					});

				
//View Comment
					 $(".btn-checkerComment").click(function(){
						 var accOpenLen = $('.checkerAccountOpenCheckBox:checked').length;
						 var docTypeLen = $('.checkerDocTypeCheckBox:checked').length;
						 var retailLen = $('.checkerAgeRetailCheckBox:checked').length;
						 var cardLen = $('.checkerAgeCardCheckBox:checked').length;
						 var uplLen = $('.checkerAgeUPLCheckBox:checked').length;
						 var len = accOpenLen + docTypeLen + retailLen + cardLen + uplLen;
						 if(len < 1){
							 alert("Select atleast Check Box");
						 } else{
							var list = [];
							showPopupLoader();
							list = readValues();
							var paramId, createdBy;
							$.each(list, function(i, data){
								 paramId = data.pickListId;
								 if(data.pickListType == 'PBOC_RISK_SCORE_AGE_RETAIL_PARAMS' || data.pickListType == 'PBOC_RISK_SCORE_AGE_CARD_PARAMS' || data.pickListType == 'PBOC_RISK_SCORE_AGE_UPL_PARAMS')
									 paramId = data.parentPickListId;
								 createdBy = data.createId;
							});
							var url = contextPath+"/kyccomments/getComment?componentId="+paramId+"&createdBy="+createdBy;
							$.ajax({
						        type: "POST",
						        contentType: "application/json",
						        url: url,
						        dataType: 'json',
						        timeout: 600000,
						        success: function (response) {
						        	$("#commentsBox").show();
						        	 $("#commentsBox").html("<textarea rows='3' cols='80' id='cmntsVal' readonly value="+response.comments+"></textarea>");
						        	 $("#cmntsVal").val(response.comments);
						        	 closePopupLoader();
						        	
						        },
						        error: function (response) {
						        	closePopupLoader();
						        	console.log(response);
						        }
						        });
						 }
						});
					function readValues(){
						 var list = [];
						 $("table tbody").find('input[name="checkerAccountOpenCheckBox"]').each(function(){
							 var data = {};
				            	if($(this).is(":checked")){
						    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						    data = readDataAccOpen(data, tds);
						    data["authStatus"] = getRejectedAuthStatus(data["authStatus"]);
		            		 data["comments"] = loadComments();
						    list.push(data);
				            	}
						 });
					 			 
						 $("table tbody").find('input[name="checkerDocTypeCheckBox"]').each(function(){
							 var data = {};
				            	if($(this).is(":checked")){
						    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						    data = readDataDocType(data, tds);
						    data["authStatus"] = getRejectedAuthStatus(data["authStatus"]);
		            		 data["comments"] = loadComments();
						    list.push(data);
				            	}
						 });
									 		
						 $("table tbody").find('input[name="checkerAgeRetailCheckBox"]').each(function(){
							 var data = {};
				            	if($(this).is(":checked")){
						    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						    data = readDataAgeRetail(data, tds);
						    data["authStatus"] = getRejectedAuthStatus(data["authStatus"]);
		            		 data["comments"] = loadComments();
						    list.push(data);
				            	}
						 });
						 $("table tbody").find('input[name="checkerAgeCardCheckBox"]').each(function(){
							 var data = {};
				            	if($(this).is(":checked")){
						    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						    data = readDataAgeCard(data, tds);
						    data["authStatus"] = getRejectedAuthStatus(data["authStatus"]);
		            		 data["comments"] = loadComments();
						    list.push(data);
				            	}
						 });
					
						 $("table tbody").find('input[name="checkerAgeUPLCheckBox"]').each(function(){
							 var data = {};
				            	if($(this).is(":checked")){
						    var row = $(this).closest("tr"),       // Finds the closest row <tr> 
						    tds = row.find("td"); 
						    data = readDataAgeUPL(data, tds);
						    data["authStatus"] = getRejectedAuthStatus(data["authStatus"]);
		            		 data["comments"] = loadComments();
						    list.push(data);
				            	}
						 });
					return list;
					}
					
					function AjaxGetSearchDataSucceeded(result) {
					    if (result != "[]") {
								loadPagination($("#pageNo").val(), $("#totalCount").val(), "loadDataTable");
								closePopupLoader();
					    }
					}

					function getTotalPickListCount(inputData) {
						setTimeout(function () {
							showPopupLoader();
						$.ajax({
							type: "POST",
					        contentType: "application/json",
					        url: "countryRiskOverride/historyCount",
					        data: JSON.stringify(inputData),
					        dataType: 'json',
					        async : false,
					        timeout: 600000,
					        beforeSend: function () { showPopupLoader(); },
					        success: function (response) {
					        	$("#totalCount").val(response);
					        	$("#recordsCount").text(response);
					        }
						});
						},10);
					}

					function loadDataTable(pageNmbr) {
						pageNo = pageNmbr;
						$("#pageNo").val(pageNo);
						loadHistory();
					}
					
					function getUIValues(){
						$.ajax({
							type: "POST",
					        contentType: "application/json",
					        url: "countryRiskOverride/getUIValues",
					      //  data: JSON.stringify(inputData),
					        dataType: 'json',
					        async : false,
					        timeout: 600000,
					      //  beforeSend: function () { showPopupLoader(); },
					        success: function(response) {
					        	codeValidationMsg = response.codeValidationMsg;  
								riskScoreValidation = response.riskScoreValidation;
								custTypeValidation = response.custTypeValidation;
								erroOccured = response.erroOccured;
								noDataAvailable = response.noDataAvailable;
								futureDateValidation = response.futureDateValidation;
								atleastOneCheckBox = response.atleastOneCheckBox;
								ageDiffValidation = response.ageDiffValidation;
								validMinAge = response.validMinAge;
								validMaxAge = response.validMaxAge;
								missDataRequired = response.missDataRequired;
								minAgeRequired = response.minAgeRequired;
								maxAgeRequired = response.maxAgeRequired;
								riskScoreRequired = response.riskScoreRequired;
								commentsRequired = response.commentsRequired;
								numbersOnly = response.numbersOnly;
								alphabetsOnly = response.alphabetsOnly;
								saveSuccessMsg = response.saveSuccessMsg;
								updateSuccessMsg = response.updateSuccessMsg;
								deleteSuccessMsg = response.deleteSuccessMsg;
								commentsLbl = response.commentsLbl;
					        }
						});
					}
